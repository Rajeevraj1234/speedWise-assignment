{"ast":null,"code":"import React, { useLayoutEffect, useRef } from 'react';\nexport const Collapse = _ref => {\n  let {\n    id,\n    children,\n    expanded = false\n  } = _ref;\n  const ref = useRef(null);\n  const instant = useRef(true);\n  const transition = 'height 250ms ease-out';\n\n  const openCollapse = () => {\n    const node = ref.current;\n    if (!node) return;\n    requestAnimationFrame(() => {\n      node.style.height = node.scrollHeight + 'px';\n    });\n  };\n\n  const closeCollapse = () => {\n    const node = ref.current;\n    if (!node) return;\n    requestAnimationFrame(() => {\n      node.style.height = node.offsetHeight + 'px';\n      node.style.overflow = 'hidden';\n      requestAnimationFrame(() => {\n        node.style.height = '0';\n      });\n    });\n  };\n\n  useLayoutEffect(() => {\n    if (expanded) {\n      openCollapse();\n    } else {\n      closeCollapse();\n    }\n  }, [expanded]);\n  useLayoutEffect(() => {\n    const node = ref.current;\n    if (!node) return;\n\n    function handleComplete() {\n      if (!node) return;\n      node.style.overflow = expanded ? 'initial' : 'hidden';\n\n      if (expanded) {\n        node.style.height = 'auto';\n      }\n    }\n\n    function handleTransitionEnd(event) {\n      if (node && event.target === node && event.propertyName === 'height') {\n        handleComplete();\n      }\n    }\n\n    if (instant.current) {\n      handleComplete();\n      instant.current = false;\n    }\n\n    node.addEventListener('transitionend', handleTransitionEnd);\n    return () => node.removeEventListener('transitionend', handleTransitionEnd);\n  }, [expanded]);\n  return React.createElement(\"div\", {\n    children: children,\n    className: \"wallet-adapter-collapse\",\n    id: id,\n    ref: ref,\n    role: \"region\",\n    style: {\n      height: 0,\n      transition: instant.current ? undefined : transition\n    }\n  });\n};","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,IAAoBC,eAApB,EAAqCC,MAArC,QAAmD,OAAnD;AAOA,OAAO,MAAMC,QAAQ,GAAsB,QAAuC;AAAA,MAAtC;AAAEC,MAAF;AAAMC,YAAN;AAAgBC,YAAQ,GAAG;AAA3B,GAAsC;AAC9E,QAAMC,GAAG,GAAGL,MAAM,CAAiB,IAAjB,CAAlB;AACA,QAAMM,OAAO,GAAGN,MAAM,CAAC,IAAD,CAAtB;AACA,QAAMO,UAAU,GAAG,uBAAnB;;AAEA,QAAMC,YAAY,GAAG,MAAK;AACtB,UAAMC,IAAI,GAAGJ,GAAG,CAACK,OAAjB;AACA,QAAI,CAACD,IAAL,EAAW;AAEXE,yBAAqB,CAAC,MAAK;AACvBF,UAAI,CAACG,KAAL,CAAWC,MAAX,GAAoBJ,IAAI,CAACK,YAAL,GAAoB,IAAxC;AACH,KAFoB,CAArB;AAGH,GAPD;;AASA,QAAMC,aAAa,GAAG,MAAK;AACvB,UAAMN,IAAI,GAAGJ,GAAG,CAACK,OAAjB;AACA,QAAI,CAACD,IAAL,EAAW;AAEXE,yBAAqB,CAAC,MAAK;AACvBF,UAAI,CAACG,KAAL,CAAWC,MAAX,GAAoBJ,IAAI,CAACO,YAAL,GAAoB,IAAxC;AACAP,UAAI,CAACG,KAAL,CAAWK,QAAX,GAAsB,QAAtB;AACAN,2BAAqB,CAAC,MAAK;AACvBF,YAAI,CAACG,KAAL,CAAWC,MAAX,GAAoB,GAApB;AACH,OAFoB,CAArB;AAGH,KANoB,CAArB;AAOH,GAXD;;AAaAd,iBAAe,CAAC,MAAK;AACjB,QAAIK,QAAJ,EAAc;AACVI,kBAAY;AACf,KAFD,MAEO;AACHO,mBAAa;AAChB;AACJ,GANc,EAMZ,CAACX,QAAD,CANY,CAAf;AAQAL,iBAAe,CAAC,MAAK;AACjB,UAAMU,IAAI,GAAGJ,GAAG,CAACK,OAAjB;AACA,QAAI,CAACD,IAAL,EAAW;;AAEX,aAASS,cAAT,GAAuB;AACnB,UAAI,CAACT,IAAL,EAAW;AAEXA,UAAI,CAACG,KAAL,CAAWK,QAAX,GAAsBb,QAAQ,GAAG,SAAH,GAAe,QAA7C;;AACA,UAAIA,QAAJ,EAAc;AACVK,YAAI,CAACG,KAAL,CAAWC,MAAX,GAAoB,MAApB;AACH;AACJ;;AAED,aAASM,mBAAT,CAA6BC,KAA7B,EAAmD;AAC/C,UAAIX,IAAI,IAAIW,KAAK,CAACC,MAAN,KAAiBZ,IAAzB,IAAiCW,KAAK,CAACE,YAAN,KAAuB,QAA5D,EAAsE;AAClEJ,sBAAc;AACjB;AACJ;;AAED,QAAIZ,OAAO,CAACI,OAAZ,EAAqB;AACjBQ,oBAAc;AACdZ,aAAO,CAACI,OAAR,GAAkB,KAAlB;AACH;;AAEDD,QAAI,CAACc,gBAAL,CAAsB,eAAtB,EAAuCJ,mBAAvC;AACA,WAAO,MAAMV,IAAI,CAACe,mBAAL,CAAyB,eAAzB,EAA0CL,mBAA1C,CAAb;AACH,GA1Bc,EA0BZ,CAACf,QAAD,CA1BY,CAAf;AA4BA,SACIN;AACIK,YAAQ,EAAEA,QADd;AAEIsB,aAAS,EAAC,yBAFd;AAGIvB,MAAE,EAAEA,EAHR;AAIIG,OAAG,EAAEA,GAJT;AAKIqB,QAAI,EAAC,QALT;AAMId,SAAK,EAAE;AAAEC,YAAM,EAAE,CAAV;AAAaN,gBAAU,EAAED,OAAO,CAACI,OAAR,GAAkBiB,SAAlB,GAA8BpB;AAAvD;AANX,IADJ;AAUH,CAzEM","names":["React","useLayoutEffect","useRef","Collapse","id","children","expanded","ref","instant","transition","openCollapse","node","current","requestAnimationFrame","style","height","scrollHeight","closeCollapse","offsetHeight","overflow","handleComplete","handleTransitionEnd","event","target","propertyName","addEventListener","removeEventListener","className","role","undefined"],"sources":["/home/rajeev/Internship/Get-NFTs-in-Wallet-Adapter/node_modules/@solana/wallet-adapter-react-ui/src/Collapse.tsx"],"sourcesContent":["import React, { FC, useLayoutEffect, useRef } from 'react';\n\nexport interface CollapseProps {\n    expanded: boolean;\n    id: string;\n}\n\nexport const Collapse: FC<CollapseProps> = ({ id, children, expanded = false }) => {\n    const ref = useRef<HTMLDivElement>(null);\n    const instant = useRef(true);\n    const transition = 'height 250ms ease-out';\n\n    const openCollapse = () => {\n        const node = ref.current;\n        if (!node) return;\n\n        requestAnimationFrame(() => {\n            node.style.height = node.scrollHeight + 'px';\n        });\n    };\n\n    const closeCollapse = () => {\n        const node = ref.current;\n        if (!node) return;\n\n        requestAnimationFrame(() => {\n            node.style.height = node.offsetHeight + 'px';\n            node.style.overflow = 'hidden';\n            requestAnimationFrame(() => {\n                node.style.height = '0';\n            });\n        });\n    };\n\n    useLayoutEffect(() => {\n        if (expanded) {\n            openCollapse();\n        } else {\n            closeCollapse();\n        }\n    }, [expanded]);\n\n    useLayoutEffect(() => {\n        const node = ref.current;\n        if (!node) return;\n\n        function handleComplete() {\n            if (!node) return;\n\n            node.style.overflow = expanded ? 'initial' : 'hidden';\n            if (expanded) {\n                node.style.height = 'auto';\n            }\n        }\n\n        function handleTransitionEnd(event: TransitionEvent) {\n            if (node && event.target === node && event.propertyName === 'height') {\n                handleComplete();\n            }\n        }\n\n        if (instant.current) {\n            handleComplete();\n            instant.current = false;\n        }\n\n        node.addEventListener('transitionend', handleTransitionEnd);\n        return () => node.removeEventListener('transitionend', handleTransitionEnd);\n    }, [expanded]);\n\n    return (\n        <div\n            children={children}\n            className=\"wallet-adapter-collapse\"\n            id={id}\n            ref={ref}\n            role=\"region\"\n            style={{ height: 0, transition: instant.current ? undefined : transition }}\n        />\n    );\n};\n"]},"metadata":{},"sourceType":"module"}