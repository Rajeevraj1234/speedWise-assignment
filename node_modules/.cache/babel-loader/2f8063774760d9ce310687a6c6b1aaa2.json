{"ast":null,"code":"import { WalletReadyState } from '@solana/wallet-adapter-base';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport React, { useCallback, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Collapse } from './Collapse.mjs';\nimport { useWalletModal } from './useWalletModal.mjs';\nimport { WalletListItem } from './WalletListItem.mjs';\nimport { WalletSVG } from './WalletSVG.mjs';\nexport const WalletModal = _ref => {\n  let {\n    className = '',\n    container = 'body'\n  } = _ref;\n  const ref = useRef(null);\n  const {\n    wallets,\n    select\n  } = useWallet();\n  const {\n    setVisible\n  } = useWalletModal();\n  const [expanded, setExpanded] = useState(false);\n  const [fadeIn, setFadeIn] = useState(false);\n  const [portal, setPortal] = useState(null);\n  const [installedWallets, otherWallets] = useMemo(() => {\n    const installed = [];\n    const notDetected = [];\n    const loadable = [];\n\n    for (const wallet of wallets) {\n      if (wallet.readyState === WalletReadyState.NotDetected) {\n        notDetected.push(wallet);\n      } else if (wallet.readyState === WalletReadyState.Loadable) {\n        loadable.push(wallet);\n      } else if (wallet.readyState === WalletReadyState.Installed) {\n        installed.push(wallet);\n      }\n    }\n\n    return [installed, [...loadable, ...notDetected]];\n  }, [wallets]);\n  const getStartedWallet = useMemo(() => {\n    return installedWallets.length ? installedWallets[0] : wallets.find(wallet => wallet.adapter.name === 'Torus') || wallets.find(wallet => wallet.adapter.name === 'Phantom') || wallets.find(wallet => wallet.readyState === WalletReadyState.Loadable) || otherWallets[0];\n  }, [installedWallets, wallets, otherWallets]);\n  const hideModal = useCallback(() => {\n    setFadeIn(false);\n    setTimeout(() => setVisible(false), 150);\n  }, []);\n  const handleClose = useCallback(event => {\n    event.preventDefault();\n    hideModal();\n  }, [hideModal]);\n  const handleWalletClick = useCallback((event, walletName) => {\n    select(walletName);\n    handleClose(event);\n  }, [select, handleClose]);\n  const handleCollapseClick = useCallback(() => setExpanded(!expanded), [expanded]);\n  const handleTabKey = useCallback(event => {\n    const node = ref.current;\n    if (!node) return; // here we query all focusable elements\n\n    const focusableElements = node.querySelectorAll('button');\n    const firstElement = focusableElements[0];\n    const lastElement = focusableElements[focusableElements.length - 1];\n\n    if (event.shiftKey) {\n      // if going backward by pressing tab and firstElement is active, shift focus to last focusable element\n      if (document.activeElement === firstElement) {\n        lastElement.focus();\n        event.preventDefault();\n      }\n    } else {\n      // if going forward by pressing tab and lastElement is active, shift focus to first focusable element\n      if (document.activeElement === lastElement) {\n        firstElement.focus();\n        event.preventDefault();\n      }\n    }\n  }, [ref]);\n  useLayoutEffect(() => {\n    const handleKeyDown = event => {\n      if (event.key === 'Escape') {\n        hideModal();\n      } else if (event.key === 'Tab') {\n        handleTabKey(event);\n      }\n    }; // Get original overflow\n\n\n    const {\n      overflow\n    } = window.getComputedStyle(document.body); // Hack to enable fade in animation after mount\n\n    setTimeout(() => setFadeIn(true), 0); // Prevent scrolling on mount\n\n    document.body.style.overflow = 'hidden'; // Listen for keydown events\n\n    window.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      // Re-enable scrolling when component unmounts\n      document.body.style.overflow = overflow;\n      window.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [hideModal, handleTabKey]);\n  useLayoutEffect(() => setPortal(document.querySelector(container)), [container]);\n  return portal && createPortal(React.createElement(\"div\", {\n    \"aria-labelledby\": \"wallet-adapter-modal-title\",\n    \"aria-modal\": \"true\",\n    className: `wallet-adapter-modal ${fadeIn && 'wallet-adapter-modal-fade-in'} ${className}`,\n    ref: ref,\n    role: \"dialog\"\n  }, React.createElement(\"div\", {\n    className: \"wallet-adapter-modal-container\"\n  }, React.createElement(\"div\", {\n    className: \"wallet-adapter-modal-wrapper\"\n  }, React.createElement(\"button\", {\n    onClick: handleClose,\n    className: \"wallet-adapter-modal-button-close\"\n  }, React.createElement(\"svg\", {\n    width: \"14\",\n    height: \"14\"\n  }, React.createElement(\"path\", {\n    d: \"M14 12.461 8.3 6.772l5.234-5.233L12.006 0 6.772 5.234 1.54 0 0 1.539l5.234 5.233L0 12.006l1.539 1.528L6.772 8.3l5.69 5.7L14 12.461z\"\n  }))), installedWallets.length ? React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    className: \"wallet-adapter-modal-title\"\n  }, \"Connect a wallet on Solana to continue\"), React.createElement(\"ul\", {\n    className: \"wallet-adapter-modal-list\"\n  }, installedWallets.map(wallet => React.createElement(WalletListItem, {\n    key: wallet.adapter.name,\n    handleClick: event => handleWalletClick(event, wallet.adapter.name),\n    wallet: wallet\n  })), otherWallets.length ? React.createElement(Collapse, {\n    expanded: expanded,\n    id: \"wallet-adapter-modal-collapse\"\n  }, otherWallets.map(wallet => React.createElement(WalletListItem, {\n    key: wallet.adapter.name,\n    handleClick: event => handleWalletClick(event, wallet.adapter.name),\n    tabIndex: expanded ? 0 : -1,\n    wallet: wallet\n  }))) : null), otherWallets.length ? React.createElement(\"button\", {\n    className: \"wallet-adapter-modal-list-more\",\n    onClick: handleCollapseClick,\n    tabIndex: 0\n  }, React.createElement(\"span\", null, expanded ? 'Less ' : 'More ', \"options\"), React.createElement(\"svg\", {\n    width: \"13\",\n    height: \"7\",\n    viewBox: \"0 0 13 7\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: `${expanded ? 'wallet-adapter-modal-list-more-icon-rotate' : ''}`\n  }, React.createElement(\"path\", {\n    d: \"M0.71418 1.626L5.83323 6.26188C5.91574 6.33657 6.0181 6.39652 6.13327 6.43762C6.24844 6.47872 6.37371 6.5 6.50048 6.5C6.62725 6.5 6.75252 6.47872 6.8677 6.43762C6.98287 6.39652 7.08523 6.33657 7.16774 6.26188L12.2868 1.626C12.7753 1.1835 12.3703 0.5 11.6195 0.5H1.37997C0.629216 0.5 0.224175 1.1835 0.71418 1.626Z\"\n  }))) : null) : React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    className: \"wallet-adapter-modal-title\"\n  }, \"You'll need a wallet on Solana to continue\"), React.createElement(\"div\", {\n    className: \"wallet-adapter-modal-middle\"\n  }, React.createElement(WalletSVG, null), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"wallet-adapter-modal-middle-button\",\n    onClick: event => handleWalletClick(event, getStartedWallet.adapter.name)\n  }, \"Get started\")), otherWallets.length ? React.createElement(React.Fragment, null, React.createElement(\"button\", {\n    className: \"wallet-adapter-modal-list-more\",\n    onClick: handleCollapseClick,\n    tabIndex: 0\n  }, React.createElement(\"span\", null, expanded ? 'Hide ' : 'Already have a wallet? View ', \"options\"), React.createElement(\"svg\", {\n    width: \"13\",\n    height: \"7\",\n    viewBox: \"0 0 13 7\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: `${expanded ? 'wallet-adapter-modal-list-more-icon-rotate' : ''}`\n  }, React.createElement(\"path\", {\n    d: \"M0.71418 1.626L5.83323 6.26188C5.91574 6.33657 6.0181 6.39652 6.13327 6.43762C6.24844 6.47872 6.37371 6.5 6.50048 6.5C6.62725 6.5 6.75252 6.47872 6.8677 6.43762C6.98287 6.39652 7.08523 6.33657 7.16774 6.26188L12.2868 1.626C12.7753 1.1835 12.3703 0.5 11.6195 0.5H1.37997C0.629216 0.5 0.224175 1.1835 0.71418 1.626Z\"\n  }))), React.createElement(Collapse, {\n    expanded: expanded,\n    id: \"wallet-adapter-modal-collapse\"\n  }, React.createElement(\"ul\", {\n    className: \"wallet-adapter-modal-list\"\n  }, otherWallets.map(wallet => React.createElement(WalletListItem, {\n    key: wallet.adapter.name,\n    handleClick: event => handleWalletClick(event, wallet.adapter.name),\n    tabIndex: expanded ? 0 : -1,\n    wallet: wallet\n  }))))) : null))), React.createElement(\"div\", {\n    className: \"wallet-adapter-modal-overlay\",\n    onMouseDown: handleClose\n  })), portal);\n};","map":{"version":3,"mappings":"AAAA,SAAqBA,gBAArB,QAA6C,6BAA7C;AACA,SAASC,SAAT,QAAkC,8BAAlC;AACA,OAAOC,KAAP,IAAgCC,WAAhC,EAA6CC,eAA7C,EAA8DC,OAA9D,EAAuEC,MAAvE,EAA+EC,QAA/E,QAA+F,OAA/F;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAOA,OAAO,MAAMC,WAAW,GAAyB,QAA2C;AAAA,MAA1C;AAAEC,aAAS,GAAG,EAAd;AAAkBC,aAAS,GAAG;AAA9B,GAA0C;AACxF,QAAMC,GAAG,GAAGV,MAAM,CAAiB,IAAjB,CAAlB;AACA,QAAM;AAAEW,WAAF;AAAWC;AAAX,MAAsBjB,SAAS,EAArC;AACA,QAAM;AAAEkB;AAAF,MAAiBT,cAAc,EAArC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAiB,IAAjB,CAApC;AAEA,QAAM,CAACmB,gBAAD,EAAmBC,YAAnB,IAAmCtB,OAAO,CAAC,MAAK;AAClD,UAAMuB,SAAS,GAAa,EAA5B;AACA,UAAMC,WAAW,GAAa,EAA9B;AACA,UAAMC,QAAQ,GAAa,EAA3B;;AAEA,SAAK,MAAMC,MAAX,IAAqBd,OAArB,EAA8B;AAC1B,UAAIc,MAAM,CAACC,UAAP,KAAsBhC,gBAAgB,CAACiC,WAA3C,EAAwD;AACpDJ,mBAAW,CAACK,IAAZ,CAAiBH,MAAjB;AACH,OAFD,MAEO,IAAIA,MAAM,CAACC,UAAP,KAAsBhC,gBAAgB,CAACmC,QAA3C,EAAqD;AACxDL,gBAAQ,CAACI,IAAT,CAAcH,MAAd;AACH,OAFM,MAEA,IAAIA,MAAM,CAACC,UAAP,KAAsBhC,gBAAgB,CAACoC,SAA3C,EAAsD;AACzDR,iBAAS,CAACM,IAAV,CAAeH,MAAf;AACH;AACJ;;AAED,WAAO,CAACH,SAAD,EAAY,CAAC,GAAGE,QAAJ,EAAc,GAAGD,WAAjB,CAAZ,CAAP;AACH,GAhB+C,EAgB7C,CAACZ,OAAD,CAhB6C,CAAhD;AAkBA,QAAMoB,gBAAgB,GAAGhC,OAAO,CAAC,MAAK;AAClC,WAAOqB,gBAAgB,CAACY,MAAjB,GACDZ,gBAAgB,CAAC,CAAD,CADf,GAEDT,OAAO,CAACsB,IAAR,CAAcR,MAAD,IAA+CA,MAAM,CAACS,OAAP,CAAeC,IAAf,KAAwB,OAApF,KACIxB,OAAO,CAACsB,IAAR,CAAcR,MAAD,IAA+CA,MAAM,CAACS,OAAP,CAAeC,IAAf,KAAwB,SAApF,CADJ,IAEIxB,OAAO,CAACsB,IAAR,CAAcR,MAAD,IAAiCA,MAAM,CAACC,UAAP,KAAsBhC,gBAAgB,CAACmC,QAArF,CAFJ,IAGIR,YAAY,CAAC,CAAD,CALtB;AAMH,GAP+B,EAO7B,CAACD,gBAAD,EAAmBT,OAAnB,EAA4BU,YAA5B,CAP6B,CAAhC;AASA,QAAMe,SAAS,GAAGvC,WAAW,CAAC,MAAK;AAC/BoB,aAAS,CAAC,KAAD,CAAT;AACAoB,cAAU,CAAC,MAAMxB,UAAU,CAAC,KAAD,CAAjB,EAA0B,GAA1B,CAAV;AACH,GAH4B,EAG1B,EAH0B,CAA7B;AAKA,QAAMyB,WAAW,GAAGzC,WAAW,CAC1B0C,KAAD,IAAsB;AAClBA,SAAK,CAACC,cAAN;AACAJ,aAAS;AACZ,GAJ0B,EAK3B,CAACA,SAAD,CAL2B,CAA/B;AAQA,QAAMK,iBAAiB,GAAG5C,WAAW,CACjC,CAAC0C,KAAD,EAAoBG,UAApB,KAA8C;AAC1C9B,UAAM,CAAC8B,UAAD,CAAN;AACAJ,eAAW,CAACC,KAAD,CAAX;AACH,GAJgC,EAKjC,CAAC3B,MAAD,EAAS0B,WAAT,CALiC,CAArC;AAQA,QAAMK,mBAAmB,GAAG9C,WAAW,CAAC,MAAMkB,WAAW,CAAC,CAACD,QAAF,CAAlB,EAA+B,CAACA,QAAD,CAA/B,CAAvC;AAEA,QAAM8B,YAAY,GAAG/C,WAAW,CAC3B0C,KAAD,IAAyB;AACrB,UAAMM,IAAI,GAAGnC,GAAG,CAACoC,OAAjB;AACA,QAAI,CAACD,IAAL,EAAW,OAFU,CAIrB;;AACA,UAAME,iBAAiB,GAAGF,IAAI,CAACG,gBAAL,CAAsB,QAAtB,CAA1B;AACA,UAAMC,YAAY,GAAGF,iBAAiB,CAAC,CAAD,CAAtC;AACA,UAAMG,WAAW,GAAGH,iBAAiB,CAACA,iBAAiB,CAACf,MAAlB,GAA2B,CAA5B,CAArC;;AAEA,QAAIO,KAAK,CAACY,QAAV,EAAoB;AAChB;AACA,UAAIC,QAAQ,CAACC,aAAT,KAA2BJ,YAA/B,EAA6C;AACzCC,mBAAW,CAACI,KAAZ;AACAf,aAAK,CAACC,cAAN;AACH;AACJ,KAND,MAMO;AACH;AACA,UAAIY,QAAQ,CAACC,aAAT,KAA2BH,WAA/B,EAA4C;AACxCD,oBAAY,CAACK,KAAb;AACAf,aAAK,CAACC,cAAN;AACH;AACJ;AACJ,GAvB2B,EAwB5B,CAAC9B,GAAD,CAxB4B,CAAhC;AA2BAZ,iBAAe,CAAC,MAAK;AACjB,UAAMyD,aAAa,GAAIhB,KAAD,IAAyB;AAC3C,UAAIA,KAAK,CAACiB,GAAN,KAAc,QAAlB,EAA4B;AACxBpB,iBAAS;AACZ,OAFD,MAEO,IAAIG,KAAK,CAACiB,GAAN,KAAc,KAAlB,EAAyB;AAC5BZ,oBAAY,CAACL,KAAD,CAAZ;AACH;AACJ,KAND,CADiB,CASjB;;;AACA,UAAM;AAAEkB;AAAF,QAAeC,MAAM,CAACC,gBAAP,CAAwBP,QAAQ,CAACQ,IAAjC,CAArB,CAViB,CAWjB;;AACAvB,cAAU,CAAC,MAAMpB,SAAS,CAAC,IAAD,CAAhB,EAAwB,CAAxB,CAAV,CAZiB,CAajB;;AACAmC,YAAQ,CAACQ,IAAT,CAAcC,KAAd,CAAoBJ,QAApB,GAA+B,QAA/B,CAdiB,CAejB;;AACAC,UAAM,CAACI,gBAAP,CAAwB,SAAxB,EAAmCP,aAAnC,EAAkD,KAAlD;AAEA,WAAO,MAAK;AACR;AACAH,cAAQ,CAACQ,IAAT,CAAcC,KAAd,CAAoBJ,QAApB,GAA+BA,QAA/B;AACAC,YAAM,CAACK,mBAAP,CAA2B,SAA3B,EAAsCR,aAAtC,EAAqD,KAArD;AACH,KAJD;AAKH,GAvBc,EAuBZ,CAACnB,SAAD,EAAYQ,YAAZ,CAvBY,CAAf;AAyBA9C,iBAAe,CAAC,MAAMqB,SAAS,CAACiC,QAAQ,CAACY,aAAT,CAAuBvD,SAAvB,CAAD,CAAhB,EAAqD,CAACA,SAAD,CAArD,CAAf;AAEA,SACIS,MAAM,IACNhB,YAAY,CACRN;AAAA,uBACoB,4BADpB;AACgD,kBACjC,MAFf;AAGIY,aAAS,EAAE,wBAAwBQ,MAAM,IAAI,8BAA8B,IAAIR,SAAS,EAH5F;AAIIE,OAAG,EAAEA,GAJT;AAKIuD,QAAI,EAAC;AALT,KAOIrE;AAAKY,aAAS,EAAC;AAAf,KACIZ;AAAKY,aAAS,EAAC;AAAf,KACIZ;AAAQsE,WAAO,EAAE5B,WAAjB;AAA8B9B,aAAS,EAAC;AAAxC,KACIZ;AAAKuE,SAAK,EAAC,IAAX;AAAgBC,UAAM,EAAC;AAAvB,KACIxE;AAAMyE,KAAC,EAAC;AAAR,IADJ,CADJ,CADJ,EAMKjD,gBAAgB,CAACY,MAAjB,GACGpC,0CACIA;AAAIY,aAAS,EAAC;AAAd,KAA0C,wCAA1C,CADJ,EAEIZ;AAAIY,aAAS,EAAC;AAAd,KACKY,gBAAgB,CAACkD,GAAjB,CAAsB7C,MAAD,IAClB7B,oBAACS,cAAD,EAAe;AACXmD,OAAG,EAAE/B,MAAM,CAACS,OAAP,CAAeC,IADT;AAEXoC,eAAW,EAAGhC,KAAD,IAAWE,iBAAiB,CAACF,KAAD,EAAQd,MAAM,CAACS,OAAP,CAAeC,IAAvB,CAF9B;AAGXV,UAAM,EAAEA;AAHG,GAAf,CADH,CADL,EAQKJ,YAAY,CAACW,MAAb,GACGpC,oBAACO,QAAD,EAAS;AAACW,YAAQ,EAAEA,QAAX;AAAqB0D,MAAE,EAAC;AAAxB,GAAT,EACKnD,YAAY,CAACiD,GAAb,CAAkB7C,MAAD,IACd7B,oBAACS,cAAD,EAAe;AACXmD,OAAG,EAAE/B,MAAM,CAACS,OAAP,CAAeC,IADT;AAEXoC,eAAW,EAAGhC,KAAD,IACTE,iBAAiB,CAACF,KAAD,EAAQd,MAAM,CAACS,OAAP,CAAeC,IAAvB,CAHV;AAKXsC,YAAQ,EAAE3D,QAAQ,GAAG,CAAH,GAAO,CAAC,CALf;AAMXW,UAAM,EAAEA;AANG,GAAf,CADH,CADL,CADH,GAaG,IArBR,CAFJ,EAyBKJ,YAAY,CAACW,MAAb,GACGpC;AACIY,aAAS,EAAC,gCADd;AAEI0D,WAAO,EAAEvB,mBAFb;AAGI8B,YAAQ,EAAE;AAHd,KAKI7E,kCAAOkB,QAAQ,GAAG,OAAH,GAAa,OAA5B,YALJ,EAMIlB;AACIuE,SAAK,EAAC,IADV;AAEIC,UAAM,EAAC,GAFX;AAGIM,WAAO,EAAC,UAHZ;AAIIC,SAAK,EAAC,4BAJV;AAKInE,aAAS,EAAE,GACPM,QAAQ,GAAG,4CAAH,GAAkD,EAC9D;AAPJ,KASIlB;AAAMyE,KAAC,EAAC;AAAR,IATJ,CANJ,CADH,GAmBG,IA5CR,CADH,GAgDGzE,0CACIA;AAAIY,aAAS,EAAC;AAAd,KAA0C,4CAA1C,CADJ,EAIIZ;AAAKY,aAAS,EAAC;AAAf,KACIZ,oBAACU,SAAD,EAAU,IAAV,CADJ,EAEIV;AACIgF,QAAI,EAAC,QADT;AAEIpE,aAAS,EAAC,oCAFd;AAGI0D,WAAO,EAAG3B,KAAD,IAAWE,iBAAiB,CAACF,KAAD,EAAQR,gBAAgB,CAACG,OAAjB,CAAyBC,IAAjC;AAHzC,KAG+E,aAH/E,CAFJ,CAJJ,EAcKd,YAAY,CAACW,MAAb,GACGpC,0CACIA;AACIY,aAAS,EAAC,gCADd;AAEI0D,WAAO,EAAEvB,mBAFb;AAGI8B,YAAQ,EAAE;AAHd,KAKI7E,kCAAOkB,QAAQ,GAAG,OAAH,GAAa,8BAA5B,YALJ,EAMIlB;AACIuE,SAAK,EAAC,IADV;AAEIC,UAAM,EAAC,GAFX;AAGIM,WAAO,EAAC,UAHZ;AAIIC,SAAK,EAAC,4BAJV;AAKInE,aAAS,EAAE,GACPM,QAAQ,GAAG,4CAAH,GAAkD,EAC9D;AAPJ,KASIlB;AAAMyE,KAAC,EAAC;AAAR,IATJ,CANJ,CADJ,EAmBIzE,oBAACO,QAAD,EAAS;AAACW,YAAQ,EAAEA,QAAX;AAAqB0D,MAAE,EAAC;AAAxB,GAAT,EACI5E;AAAIY,aAAS,EAAC;AAAd,KACKa,YAAY,CAACiD,GAAb,CAAkB7C,MAAD,IACd7B,oBAACS,cAAD,EAAe;AACXmD,OAAG,EAAE/B,MAAM,CAACS,OAAP,CAAeC,IADT;AAEXoC,eAAW,EAAGhC,KAAD,IACTE,iBAAiB,CAACF,KAAD,EAAQd,MAAM,CAACS,OAAP,CAAeC,IAAvB,CAHV;AAKXsC,YAAQ,EAAE3D,QAAQ,GAAG,CAAH,GAAO,CAAC,CALf;AAMXW,UAAM,EAAEA;AANG,GAAf,CADH,CADL,CADJ,CAnBJ,CADH,GAmCG,IAjDR,CAtDR,CADJ,CAPJ,EAoHI7B;AAAKY,aAAS,EAAC,8BAAf;AAA8CqE,eAAW,EAAEvC;AAA3D,IApHJ,CADQ,EAuHRpB,MAvHQ,CAFhB;AA4HH,CA5OM","names":["WalletReadyState","useWallet","React","useCallback","useLayoutEffect","useMemo","useRef","useState","createPortal","Collapse","useWalletModal","WalletListItem","WalletSVG","WalletModal","className","container","ref","wallets","select","setVisible","expanded","setExpanded","fadeIn","setFadeIn","portal","setPortal","installedWallets","otherWallets","installed","notDetected","loadable","wallet","readyState","NotDetected","push","Loadable","Installed","getStartedWallet","length","find","adapter","name","hideModal","setTimeout","handleClose","event","preventDefault","handleWalletClick","walletName","handleCollapseClick","handleTabKey","node","current","focusableElements","querySelectorAll","firstElement","lastElement","shiftKey","document","activeElement","focus","handleKeyDown","key","overflow","window","getComputedStyle","body","style","addEventListener","removeEventListener","querySelector","role","onClick","width","height","d","map","handleClick","id","tabIndex","viewBox","xmlns","type","onMouseDown"],"sources":["/home/rajeev/Internship/Get-NFTs-in-Wallet-Adapter/node_modules/@solana/wallet-adapter-react-ui/src/WalletModal.tsx"],"sourcesContent":["import { WalletName, WalletReadyState } from '@solana/wallet-adapter-base';\nimport { useWallet, Wallet } from '@solana/wallet-adapter-react';\nimport React, { FC, MouseEvent, useCallback, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Collapse } from './Collapse';\nimport { useWalletModal } from './useWalletModal';\nimport { WalletListItem } from './WalletListItem';\nimport { WalletSVG } from './WalletSVG';\n\nexport interface WalletModalProps {\n    className?: string;\n    container?: string;\n}\n\nexport const WalletModal: FC<WalletModalProps> = ({ className = '', container = 'body' }) => {\n    const ref = useRef<HTMLDivElement>(null);\n    const { wallets, select } = useWallet();\n    const { setVisible } = useWalletModal();\n    const [expanded, setExpanded] = useState(false);\n    const [fadeIn, setFadeIn] = useState(false);\n    const [portal, setPortal] = useState<Element | null>(null);\n\n    const [installedWallets, otherWallets] = useMemo(() => {\n        const installed: Wallet[] = [];\n        const notDetected: Wallet[] = [];\n        const loadable: Wallet[] = [];\n\n        for (const wallet of wallets) {\n            if (wallet.readyState === WalletReadyState.NotDetected) {\n                notDetected.push(wallet);\n            } else if (wallet.readyState === WalletReadyState.Loadable) {\n                loadable.push(wallet);\n            } else if (wallet.readyState === WalletReadyState.Installed) {\n                installed.push(wallet);\n            }\n        }\n\n        return [installed, [...loadable, ...notDetected]];\n    }, [wallets]);\n\n    const getStartedWallet = useMemo(() => {\n        return installedWallets.length\n            ? installedWallets[0]\n            : wallets.find((wallet: { adapter: { name: WalletName } }) => wallet.adapter.name === 'Torus') ||\n                  wallets.find((wallet: { adapter: { name: WalletName } }) => wallet.adapter.name === 'Phantom') ||\n                  wallets.find((wallet: { readyState: any }) => wallet.readyState === WalletReadyState.Loadable) ||\n                  otherWallets[0];\n    }, [installedWallets, wallets, otherWallets]);\n\n    const hideModal = useCallback(() => {\n        setFadeIn(false);\n        setTimeout(() => setVisible(false), 150);\n    }, []);\n\n    const handleClose = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            hideModal();\n        },\n        [hideModal]\n    );\n\n    const handleWalletClick = useCallback(\n        (event: MouseEvent, walletName: WalletName) => {\n            select(walletName);\n            handleClose(event);\n        },\n        [select, handleClose]\n    );\n\n    const handleCollapseClick = useCallback(() => setExpanded(!expanded), [expanded]);\n\n    const handleTabKey = useCallback(\n        (event: KeyboardEvent) => {\n            const node = ref.current;\n            if (!node) return;\n\n            // here we query all focusable elements\n            const focusableElements = node.querySelectorAll('button');\n            const firstElement = focusableElements[0];\n            const lastElement = focusableElements[focusableElements.length - 1];\n\n            if (event.shiftKey) {\n                // if going backward by pressing tab and firstElement is active, shift focus to last focusable element\n                if (document.activeElement === firstElement) {\n                    lastElement.focus();\n                    event.preventDefault();\n                }\n            } else {\n                // if going forward by pressing tab and lastElement is active, shift focus to first focusable element\n                if (document.activeElement === lastElement) {\n                    firstElement.focus();\n                    event.preventDefault();\n                }\n            }\n        },\n        [ref]\n    );\n\n    useLayoutEffect(() => {\n        const handleKeyDown = (event: KeyboardEvent) => {\n            if (event.key === 'Escape') {\n                hideModal();\n            } else if (event.key === 'Tab') {\n                handleTabKey(event);\n            }\n        };\n\n        // Get original overflow\n        const { overflow } = window.getComputedStyle(document.body);\n        // Hack to enable fade in animation after mount\n        setTimeout(() => setFadeIn(true), 0);\n        // Prevent scrolling on mount\n        document.body.style.overflow = 'hidden';\n        // Listen for keydown events\n        window.addEventListener('keydown', handleKeyDown, false);\n\n        return () => {\n            // Re-enable scrolling when component unmounts\n            document.body.style.overflow = overflow;\n            window.removeEventListener('keydown', handleKeyDown, false);\n        };\n    }, [hideModal, handleTabKey]);\n\n    useLayoutEffect(() => setPortal(document.querySelector(container)), [container]);\n\n    return (\n        portal &&\n        createPortal(\n            <div\n                aria-labelledby=\"wallet-adapter-modal-title\"\n                aria-modal=\"true\"\n                className={`wallet-adapter-modal ${fadeIn && 'wallet-adapter-modal-fade-in'} ${className}`}\n                ref={ref}\n                role=\"dialog\"\n            >\n                <div className=\"wallet-adapter-modal-container\">\n                    <div className=\"wallet-adapter-modal-wrapper\">\n                        <button onClick={handleClose} className=\"wallet-adapter-modal-button-close\">\n                            <svg width=\"14\" height=\"14\">\n                                <path d=\"M14 12.461 8.3 6.772l5.234-5.233L12.006 0 6.772 5.234 1.54 0 0 1.539l5.234 5.233L0 12.006l1.539 1.528L6.772 8.3l5.69 5.7L14 12.461z\" />\n                            </svg>\n                        </button>\n                        {installedWallets.length ? (\n                            <>\n                                <h1 className=\"wallet-adapter-modal-title\">Connect a wallet on Solana to continue</h1>\n                                <ul className=\"wallet-adapter-modal-list\">\n                                    {installedWallets.map((wallet) => (\n                                        <WalletListItem\n                                            key={wallet.adapter.name}\n                                            handleClick={(event) => handleWalletClick(event, wallet.adapter.name)}\n                                            wallet={wallet}\n                                        />\n                                    ))}\n                                    {otherWallets.length ? (\n                                        <Collapse expanded={expanded} id=\"wallet-adapter-modal-collapse\">\n                                            {otherWallets.map((wallet) => (\n                                                <WalletListItem\n                                                    key={wallet.adapter.name}\n                                                    handleClick={(event) =>\n                                                        handleWalletClick(event, wallet.adapter.name)\n                                                    }\n                                                    tabIndex={expanded ? 0 : -1}\n                                                    wallet={wallet}\n                                                />\n                                            ))}\n                                        </Collapse>\n                                    ) : null}\n                                </ul>\n                                {otherWallets.length ? (\n                                    <button\n                                        className=\"wallet-adapter-modal-list-more\"\n                                        onClick={handleCollapseClick}\n                                        tabIndex={0}\n                                    >\n                                        <span>{expanded ? 'Less ' : 'More '}options</span>\n                                        <svg\n                                            width=\"13\"\n                                            height=\"7\"\n                                            viewBox=\"0 0 13 7\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                            className={`${\n                                                expanded ? 'wallet-adapter-modal-list-more-icon-rotate' : ''\n                                            }`}\n                                        >\n                                            <path d=\"M0.71418 1.626L5.83323 6.26188C5.91574 6.33657 6.0181 6.39652 6.13327 6.43762C6.24844 6.47872 6.37371 6.5 6.50048 6.5C6.62725 6.5 6.75252 6.47872 6.8677 6.43762C6.98287 6.39652 7.08523 6.33657 7.16774 6.26188L12.2868 1.626C12.7753 1.1835 12.3703 0.5 11.6195 0.5H1.37997C0.629216 0.5 0.224175 1.1835 0.71418 1.626Z\" />\n                                        </svg>\n                                    </button>\n                                ) : null}\n                            </>\n                        ) : (\n                            <>\n                                <h1 className=\"wallet-adapter-modal-title\">\n                                    You'll need a wallet on Solana to continue\n                                </h1>\n                                <div className=\"wallet-adapter-modal-middle\">\n                                    <WalletSVG />\n                                    <button\n                                        type=\"button\"\n                                        className=\"wallet-adapter-modal-middle-button\"\n                                        onClick={(event) => handleWalletClick(event, getStartedWallet.adapter.name)}\n                                    >\n                                        Get started\n                                    </button>\n                                </div>\n                                {otherWallets.length ? (\n                                    <>\n                                        <button\n                                            className=\"wallet-adapter-modal-list-more\"\n                                            onClick={handleCollapseClick}\n                                            tabIndex={0}\n                                        >\n                                            <span>{expanded ? 'Hide ' : 'Already have a wallet? View '}options</span>\n                                            <svg\n                                                width=\"13\"\n                                                height=\"7\"\n                                                viewBox=\"0 0 13 7\"\n                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                className={`${\n                                                    expanded ? 'wallet-adapter-modal-list-more-icon-rotate' : ''\n                                                }`}\n                                            >\n                                                <path d=\"M0.71418 1.626L5.83323 6.26188C5.91574 6.33657 6.0181 6.39652 6.13327 6.43762C6.24844 6.47872 6.37371 6.5 6.50048 6.5C6.62725 6.5 6.75252 6.47872 6.8677 6.43762C6.98287 6.39652 7.08523 6.33657 7.16774 6.26188L12.2868 1.626C12.7753 1.1835 12.3703 0.5 11.6195 0.5H1.37997C0.629216 0.5 0.224175 1.1835 0.71418 1.626Z\" />\n                                            </svg>\n                                        </button>\n                                        <Collapse expanded={expanded} id=\"wallet-adapter-modal-collapse\">\n                                            <ul className=\"wallet-adapter-modal-list\">\n                                                {otherWallets.map((wallet) => (\n                                                    <WalletListItem\n                                                        key={wallet.adapter.name}\n                                                        handleClick={(event) =>\n                                                            handleWalletClick(event, wallet.adapter.name)\n                                                        }\n                                                        tabIndex={expanded ? 0 : -1}\n                                                        wallet={wallet}\n                                                    />\n                                                ))}\n                                            </ul>\n                                        </Collapse>\n                                    </>\n                                ) : null}\n                            </>\n                        )}\n                    </div>\n                </div>\n                <div className=\"wallet-adapter-modal-overlay\" onMouseDown={handleClose} />\n            </div>,\n            portal\n        )\n    );\n};\n"]},"metadata":{},"sourceType":"module"}