{"ast":null,"code":"var _jsxFileName = \"/home/rajeev/Internship/Get-NFTs-in-Wallet-Adapter/src/App.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n//    getTheTokensOfOwner()\nimport { WalletAdapterNetwork, WalletNotConnectedError } from '@solana/wallet-adapter-base';\nimport { ConnectionProvider, WalletProvider, useWallet } from '@solana/wallet-adapter-react';\nimport { WalletModalProvider, WalletMultiButton } from '@solana/wallet-adapter-react-ui';\nimport { GlowWalletAdapter, PhantomWalletAdapter, SlopeWalletAdapter, SolflareWalletAdapter, TorusWalletAdapter, LedgerWalletAdapter, SolletExtensionWalletAdapter, SolletWalletAdapter } from '@solana/wallet-adapter-wallets';\nimport ReactDOM from 'react-dom';\nimport { clusterApiUrl, Connection, PublicKey, LAMPORTS_PER_SOL } from '@solana/web3.js';\nimport React, { useMemo, useCallback } from 'react';\nimport { Metadata } from \"@metaplex-foundation/mpl-token-metadata\";\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('./App.css');\n\nrequire('@solana/wallet-adapter-react-ui/styles.css');\n\nlet tokensInWallet = [];\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Context, {\n    children: /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nconst Context = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // The network can be set to 'devnet', 'testnet', or 'mainnet-beta'.\n  const network = WalletAdapterNetwork.Mainnet; // You can also provide a custom RPC endpoint.\n\n  const endpoint = useMemo(() => clusterApiUrl(network), [network]); // @solana/wallet-adapter-wallets includes all the adapters but supports tree shaking and lazy loading --\n  // Only the wallets you configure here will be compiled into your application, and only the dependencies\n  // of wallets that your users connect to will be loaded.\n\n  const wallets = useMemo(() => [new PhantomWalletAdapter(), new GlowWalletAdapter(), new SlopeWalletAdapter(), new SolflareWalletAdapter({\n    network\n  }), new TorusWalletAdapter(), new LedgerWalletAdapter(), new SolletExtensionWalletAdapter(), new SolletWalletAdapter()], [network]);\n  return /*#__PURE__*/_jsxDEV(ConnectionProvider, {\n    endpoint: endpoint,\n    children: /*#__PURE__*/_jsxDEV(WalletProvider, {\n      wallets: wallets,\n      autoConnect: true,\n      children: /*#__PURE__*/_jsxDEV(WalletModalProvider, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Context, \"RNaTq20PjYTGasfEtgZ8qKkPMD0=\");\n\n_c2 = Context;\n\nconst Content = () => {\n  _s2();\n\n  const connection = new Connection(\"https://api.mainnet-beta.solana.com\"); //getTokenAccountsByOwner(publicKey,)\n\n  async function getTheTokensOfOwner(MY_WALLET_ADDRESS) {\n    (async () => {\n      //const MY_WALLET_ADDRESS = \"9m5kFDqgpf7Ckzbox91RYcADqcmvxW4MmuNvroD5H2r9\";\n      const connection = new Connection(clusterApiUrl(\"mainnet-beta\"), \"confirmed\");\n      const accounts = await connection.getParsedProgramAccounts(TOKEN_PROGRAM_ID, // new PublicKey(\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\")\n      {\n        filters: [{\n          dataSize: 165 // number of bytes\n\n        }, {\n          memcmp: {\n            offset: 32,\n            // number of bytes\n            bytes: MY_WALLET_ADDRESS // base58 encoded string\n\n          }\n        }]\n      });\n      console.log(`Found ${accounts.length} token account(s) for wallet ${MY_WALLET_ADDRESS}: `);\n      let totalNFTsI = 0;\n      await accounts.forEach((account, i) => {\n        // account.account.data;\n        let amountI = account.account.data[\"parsed\"][\"info\"][\"tokenAmount\"][\"uiAmount\"];\n        let mint_s = account.account.data[\"parsed\"][\"info\"][\"mint\"];\n\n        if (amountI == 1) {\n          totalNFTsI += 1;\n\n          try {\n            console.log(`-- Token Account Address ${i + 1}: ${account.pubkey.toString()} --`);\n            console.log(`Mint: ${mint_s}`);\n            let objT = {};\n            objT.mint = mint_s;\n            objT.amount = amountI;\n            tokensInWallet.push(objT); // let token_amount_i = account.account.data[\"parsed\"][\"info\"][\"tokenAmount\"][\"uiAmount\"]\n\n            console.log(`Amount: ${amountI}`);\n          } catch {//tokensInWallet.push({mint:mint_s,amount: amountI })\n          }\n        }\n      });\n      console.log(\"total NFTs: {}\", totalNFTsI);\n\n      let nfts_total_element = /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"(\", totalNFTsI, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 32\n      }, this);\n\n      ReactDOM.render(nfts_total_element, document.getElementById(\"totalNFTs\"));\n      console.log(\"tokens: \" + tokensInWallet);\n      let currentI = 0;\n      await tokensInWallet.forEach(element => {\n        console.log(\"element[currentI].mint\" + element.mint);\n        getAccountMetaData(element.mint, element.amount, currentI);\n        currentI += 1;\n      }); //console.log(\"nfts: \"+nftsInWallet)\n\n      /*\n        // Output\n        Found 1 token account(s) for wallet FriELggez2Dy3phZeHHAdpcoEXkKQVkv6tx3zDtCVP8T: \n        -- Token Account Address 1: Et3bNDxe2wP1yE5ao6mMvUByQUHg8nZTndpJNvfKLdCb --\n        Mint: BUGuuhPsHpk8YZrL2GctsCtXGneL1gmT5zYb7eMHZDWf\n        Amount: 3\n      */\n    })();\n  }\n\n  let elements = [];\n  let element;\n\n  async function UpdateTheUI(tokenInWallet, number) {\n    return fetch(tokenInWallet.uri).then(response => response.json()).then(responseJson => {\n      console.log(responseJson.image);\n\n      let element = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: responseJson.image,\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 24\n      }, this);\n\n      let elementname = /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: tokenInWallet.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 28\n      }, this);\n\n      ReactDOM.render(element, document.getElementById(\"img\" + number.toString()));\n      ReactDOM.render(elementname, document.getElementById(\"tit\" + number.toString()));\n      console.log(\"theJson.image\" + responseJson.image);\n      elements.push(element);\n      return responseJson.image;\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  async function getAccountMetaData(mintAddress, amountI, numberI) {\n    (async () => {\n      let mintPubkey = new PublicKey(mintAddress);\n      let tokenmetaPubkey = await Metadata.getPDA(mintPubkey);\n      const tokenmeta = await Metadata.load(connection, tokenmetaPubkey); //console.log(tokenmeta);\n      // console.log(tokenmeta.data.data[\"name\"])\n      // nftsInWallet.push({name: tokenmeta.data.data[\"name\"], uri: tokenmeta.data.data[\"uri\"]})\n      //console.log(\"nfts: \"+nftsInWallet)\n\n      tokensInWallet[numberI].name = tokenmeta.data.data[\"name\"];\n      tokensInWallet[numberI].uri = tokenmeta.data.data[\"uri\"];\n      console.log(\"uri\" + tokenmeta.data.data[\"uri\"]);\n      console.log(); // console.log(tokenmeta.data.data[\"uri\"])\n      //tokensInWallet.push({mint:mintAddress })\n\n      await UpdateTheUI(tokensInWallet[numberI], numberI); // UpdateTheUI(mintAddress, tokenmeta.data.data[\"uri\"], tokenmeta.data.data[\"name\"], numberI)\n    })();\n  }\n\n  const {\n    publicKey,\n    sendTransaction\n  } = useWallet();\n  const onClick = useCallback(async () => {\n    if (!publicKey) throw new WalletNotConnectedError();\n    connection.getBalance(publicKey).then(bal => {\n      console.log(bal / LAMPORTS_PER_SOL);\n    });\n    console.log(publicKey.toBase58());\n    getTheTokensOfOwner(publicKey.toBase58());\n  }, [publicKey, sendTransaction, connection]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"brand\",\n        href: \"#\",\n        children: \"dApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nav pull-right\",\n        children: /*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      id: \"nfts\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClick,\n        children: \"get NFTs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 6\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"NFTs in wallet \", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"totalNFTs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"span4\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"thumbnails\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"tit0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"span10\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"img0\",\n                className: \"thumbnail0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"span4\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"thumbnails\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"tit1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"span10\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"img1\",\n                className: \"thumbnail0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"span4\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"thumbnails\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"tit2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"span10\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"img2\",\n                className: \"thumbnail0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"span4\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"thumbnails\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"tit3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"span10\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"img3\",\n                className: \"thumbnail0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 1\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"span4\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"thumbnails\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"tit4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"span10\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"img4\",\n                className: \"thumbnail0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 1\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"span4\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"thumbnails\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"tit5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"span10\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"img5\",\n                className: \"thumbnail0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 1\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"span4\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"thumbnails\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"tit6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"span10\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"img6\",\n                className: \"thumbnail0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 1\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"span4\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"thumbnails\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"tit7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"span10\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"img7\",\n                className: \"thumbnail0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 1\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"span4\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"thumbnails\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"tit8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"span10\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"img8\",\n                className: \"thumbnail0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 1\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 13\n  }, this);\n};\n\n_s2(Content, \"WnXtCvpqB3Gkc5TTnkntnpYswNk=\", false, function () {\n  return [useWallet];\n});\n\n_c3 = Content;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Context\");\n$RefreshReg$(_c3, \"Content\");","map":{"version":3,"sources":["/home/rajeev/Internship/Get-NFTs-in-Wallet-Adapter/src/App.tsx"],"names":["WalletAdapterNetwork","WalletNotConnectedError","ConnectionProvider","WalletProvider","useWallet","WalletModalProvider","WalletMultiButton","GlowWalletAdapter","PhantomWalletAdapter","SlopeWalletAdapter","SolflareWalletAdapter","TorusWalletAdapter","LedgerWalletAdapter","SolletExtensionWalletAdapter","SolletWalletAdapter","ReactDOM","clusterApiUrl","Connection","PublicKey","LAMPORTS_PER_SOL","React","useMemo","useCallback","Metadata","TOKEN_PROGRAM_ID","require","tokensInWallet","App","Context","children","network","Mainnet","endpoint","wallets","Content","connection","getTheTokensOfOwner","MY_WALLET_ADDRESS","accounts","getParsedProgramAccounts","filters","dataSize","memcmp","offset","bytes","console","log","length","totalNFTsI","forEach","account","i","amountI","data","mint_s","pubkey","toString","objT","mint","amount","push","nfts_total_element","render","document","getElementById","currentI","element","getAccountMetaData","elements","UpdateTheUI","tokenInWallet","number","fetch","uri","then","response","json","responseJson","image","elementname","name","catch","error","mintAddress","numberI","mintPubkey","tokenmetaPubkey","getPDA","tokenmeta","load","publicKey","sendTransaction","onClick","getBalance","bal","toBase58"],"mappings":"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","sourcesContent":["//    getTheTokensOfOwner()\nimport { WalletAdapterNetwork,WalletNotConnectedError } from '@solana/wallet-adapter-base';\nimport { ConnectionProvider, WalletProvider, useConnection, useWallet } from '@solana/wallet-adapter-react';\nimport { WalletModalProvider, WalletMultiButton } from '@solana/wallet-adapter-react-ui';\nimport {\n    GlowWalletAdapter,\n    PhantomWalletAdapter,\n    SlopeWalletAdapter,\n    SolflareWalletAdapter,\n    TorusWalletAdapter,\n    LedgerWalletAdapter,\n    SolletExtensionWalletAdapter,\n    SolletWalletAdapter,\n} from '@solana/wallet-adapter-wallets';\nimport ReactDOM from 'react-dom';\n\nimport { clusterApiUrl, Connection, PublicKey, LAMPORTS_PER_SOL } from '@solana/web3.js';\nimport React, { FC, ReactNode, useMemo, useCallback } from 'react';\n\nimport { Metadata } from \"@metaplex-foundation/mpl-token-metadata\";\n\nimport {TOKEN_PROGRAM_ID} from '@solana/spl-token';\nrequire('./App.css');\nrequire('@solana/wallet-adapter-react-ui/styles.css');\n\nlet tokensInWallet:any = []\n\n\nconst App: FC = () => {\n    return (\n        <Context>\n            <Content />\n        </Context>\n    );\n};\nexport default App;\n\nconst Context: FC<{ children: ReactNode }> = ({ children }) => {\n    // The network can be set to 'devnet', 'testnet', or 'mainnet-beta'.\n    const network = WalletAdapterNetwork.Mainnet;\n\n    // You can also provide a custom RPC endpoint.\n    const endpoint = useMemo(() => clusterApiUrl(network), [network]);\n\n    // @solana/wallet-adapter-wallets includes all the adapters but supports tree shaking and lazy loading --\n    // Only the wallets you configure here will be compiled into your application, and only the dependencies\n    // of wallets that your users connect to will be loaded.\n    const wallets = useMemo(\n        () => [\n            new PhantomWalletAdapter(),\n            new GlowWalletAdapter(),\n            new SlopeWalletAdapter(),\n            new SolflareWalletAdapter({ network }),\n            new TorusWalletAdapter(),\n            new LedgerWalletAdapter(),\n            new SolletExtensionWalletAdapter(),\n            new SolletWalletAdapter(),\n        ],\n        [network]\n    );\n\n    return (\n        <ConnectionProvider endpoint={endpoint}>\n            <WalletProvider wallets={wallets} autoConnect>\n                <WalletModalProvider>{children}</WalletModalProvider>\n            </WalletProvider>\n        </ConnectionProvider>\n    );\n};\n\nconst Content: FC = () => {\n\n\n    const connection = new Connection(\"https://api.mainnet-beta.solana.com\");\n\n    \n    //getTokenAccountsByOwner(publicKey,)\n    async function getTheTokensOfOwner(MY_WALLET_ADDRESS: string){\n    \n    \n    (async () => {\n      //const MY_WALLET_ADDRESS = \"9m5kFDqgpf7Ckzbox91RYcADqcmvxW4MmuNvroD5H2r9\";\n      const connection = new Connection(clusterApiUrl(\"mainnet-beta\"), \"confirmed\");\n    \n      const accounts = await connection.getParsedProgramAccounts(\n        TOKEN_PROGRAM_ID, // new PublicKey(\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\")\n        {\n          filters: [\n            {\n              dataSize: 165, // number of bytes\n            },\n            {\n              memcmp: {\n                offset: 32, // number of bytes\n                bytes: MY_WALLET_ADDRESS, // base58 encoded string\n              },\n            },\n          ],\n        }\n      );\n    \n      console.log(\n        `Found ${accounts.length} token account(s) for wallet ${MY_WALLET_ADDRESS}: `\n      );\n      let totalNFTsI = 0;\n       await accounts.forEach((account, i) => {\n         // account.account.data;\n         let amountI = account.account.data[\"parsed\"][\"info\"][\"tokenAmount\"][\"uiAmount\"];\n         let mint_s = account.account.data[\"parsed\"][\"info\"][\"mint\"]\n    \n        if (amountI==1){\n          totalNFTsI += 1;\n\n          try{\n            console.log(\n              `-- Token Account Address ${i + 1}: ${account.pubkey.toString()} --`\n            );\n            console.log(`Mint: ${mint_s}`);\n            let objT:any = {};\n            objT.mint = mint_s\n            objT.amount =amountI\n            tokensInWallet.push(objT)\n            \n           // let token_amount_i = account.account.data[\"parsed\"][\"info\"][\"tokenAmount\"][\"uiAmount\"]\n            console.log(\n              `Amount: ${amountI}`\n              \n            ); \n          }catch{\n            //tokensInWallet.push({mint:mint_s,amount: amountI })\n          }\n    \n        }\n      \n      });\n\n      console.log(\"total NFTs: {}\", totalNFTsI);\n\n      let nfts_total_element = <span>({totalNFTsI})</span>;\n \n      ReactDOM.render(nfts_total_element, document.getElementById(\"totalNFTs\"))\n \n\n      console.log(\"tokens: \"+tokensInWallet)\n      let currentI = 0\n      await tokensInWallet.forEach(element => {\n        console.log(\"element[currentI].mint\"+element.mint)\n        getAccountMetaData(element.mint, element.amount, currentI)  \n        currentI+=1\n      });\n      //console.log(\"nfts: \"+nftsInWallet)\n     \n      /*\n        // Output\n        Found 1 token account(s) for wallet FriELggez2Dy3phZeHHAdpcoEXkKQVkv6tx3zDtCVP8T: \n        -- Token Account Address 1: Et3bNDxe2wP1yE5ao6mMvUByQUHg8nZTndpJNvfKLdCb --\n        Mint: BUGuuhPsHpk8YZrL2GctsCtXGneL1gmT5zYb7eMHZDWf\n        Amount: 3\n      */\n    })();\n    }\n    let elements:any = []\n    let element;\n    \n    async function UpdateTheUI(tokenInWallet, number){\n    \n      return fetch(tokenInWallet.uri)\n      .then((response) => response.json())\n      .then((responseJson) => {\n        console.log(responseJson.image)\n         let element = <img src={responseJson.image} width=\"100%\"/>;\n         let elementname = <h1>{tokenInWallet.name}</h1>\n    \n        ReactDOM.render(element, document.getElementById(\"img\"+number.toString()))\n        ReactDOM.render(elementname, document.getElementById(\"tit\"+number.toString()))\n    \n        console.log(\"theJson.image\"+ responseJson.image)\n        elements.push(element)\n    \n    \n    \n    \n        return responseJson.image;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    \n    \n         \n    }\n    \n    \n    async function getAccountMetaData(mintAddress, amountI, numberI){\n       (async () => {\n        let mintPubkey = new PublicKey(mintAddress);\n        let tokenmetaPubkey = await Metadata.getPDA(mintPubkey);\n      \n        const tokenmeta:any = await Metadata.load(connection, tokenmetaPubkey);\n        //console.log(tokenmeta);\n       // console.log(tokenmeta.data.data[\"name\"])\n       // nftsInWallet.push({name: tokenmeta.data.data[\"name\"], uri: tokenmeta.data.data[\"uri\"]})\n        //console.log(\"nfts: \"+nftsInWallet)\n       tokensInWallet[numberI].name = tokenmeta.data.data[\"name\"]\n       tokensInWallet[numberI].uri = tokenmeta.data.data[\"uri\"]\n       console.log(\"uri\"+tokenmeta.data.data[\"uri\"])\n       console.log()\n       // console.log(tokenmeta.data.data[\"uri\"])\n       //tokensInWallet.push({mint:mintAddress })\n       await UpdateTheUI(tokensInWallet[numberI], numberI)\n    \n       // UpdateTheUI(mintAddress, tokenmeta.data.data[\"uri\"], tokenmeta.data.data[\"name\"], numberI)\n      })();\n    }\n    \n    const { publicKey, sendTransaction } = useWallet();\n\n    \n    const onClick = useCallback( async () => {\n\n      if (!publicKey) throw new WalletNotConnectedError();\n      connection.getBalance(publicKey).then((bal) => {\n          console.log(bal/LAMPORTS_PER_SOL);\n\n      });\n\n      console.log(publicKey.toBase58());\n      getTheTokensOfOwner(publicKey.toBase58());\n\n  }, [publicKey, sendTransaction, connection]);\n\n\n\n    return (\n            <div className=\"navbar\">\n  <div className=\"navbar-inner\">\n    <a className=\"brand\" href=\"#\">dApp</a>\n    <ul className='nav pull-right'>\n    <WalletMultiButton />\n\n    </ul>\n    </div>\n   <div className='container-fluid' id='nfts'>\n     \n       <button onClick={onClick}>get NFTs</button>\n     <br></br>  <h1>NFTs in wallet <span id='totalNFTs'></span></h1>\n     <div className='row-fluid'>\n\n       <div className='span4'>\n     <ul className=\"thumbnails\">\n  <p id=\"tit0\"></p>\n\n  <li className=\"span10\">\n    <div id='img0'  className=\"thumbnail0\">\n    </div>\n  </li>\n  \n</ul>\n       </div>\n\n\n       <div className='span4'>\n\n<ul className=\"thumbnails\">\n  <p id=\"tit1\"></p>\n\n  <li className=\"span10\">\n    <div id='img1'  className=\"thumbnail0\">\n    </div>\n  </li>\n  \n</ul>\n</div>\n\n<div className='span4'>\n\n<ul className=\"thumbnails\">\n  <p id=\"tit2\"></p>\n\n  <li className=\"span10\">\n    <div id='img2'  className=\"thumbnail0\">\n    </div>\n  </li>\n  \n</ul>\n</div>\n     </div>\n\n\n\n\n     <div className='row-fluid'>\n\n<div className='span4'>\n<ul className=\"thumbnails\">\n<p id=\"tit3\"></p>\n\n<li className=\"span10\">\n<div id='img3'  className=\"thumbnail0\">\n</div>\n</li>\n\n</ul>\n</div>\n\n\n<div className='span4'>\n\n<ul className=\"thumbnails\">\n<p id=\"tit4\"></p>\n\n<li className=\"span10\">\n<div id='img4'  className=\"thumbnail0\">\n</div>\n</li>\n\n</ul>\n</div>\n\n<div className='span4'>\n\n<ul className=\"thumbnails\">\n<p id=\"tit5\"></p>\n\n<li className=\"span10\">\n<div id='img5'  className=\"thumbnail0\">\n</div>\n</li>\n\n</ul>\n</div>\n</div>\n\n\n\n<div className='row-fluid'>\n\n<div className='span4'>\n<ul className=\"thumbnails\">\n<p id=\"tit6\"></p>\n\n<li className=\"span10\">\n<div id='img6'  className=\"thumbnail0\">\n</div>\n</li>\n\n</ul>\n</div>\n\n\n<div className='span4'>\n\n<ul className=\"thumbnails\">\n<p id=\"tit7\"></p>\n\n<li className=\"span10\">\n<div id='img7'  className=\"thumbnail0\">\n</div>\n</li>\n\n</ul>\n</div>\n\n<div className='span4'>\n\n<ul className=\"thumbnails\">\n<p id=\"tit8\"></p>\n\n<li className=\"span10\">\n<div id='img8'  className=\"thumbnail0\">\n</div>\n</li>\n\n</ul>\n</div>\n</div>\n\n\n\n\n   </div>\n    </div>\n\n    );\n};\n"]},"metadata":{},"sourceType":"module"}