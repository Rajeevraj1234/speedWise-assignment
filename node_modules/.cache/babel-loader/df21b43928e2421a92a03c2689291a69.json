{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isSyncNativeInstruction = exports.isBurnCheckedInstruction = exports.isMintToCheckedInstruction = exports.isApproveCheckedInstruction = exports.isTransferCheckedInstruction = exports.isThawAccountInstruction = exports.isFreezeAccountInstruction = exports.isCloseAccountInstruction = exports.isBurnInstruction = exports.isMintToInstruction = exports.isSetAuthorityInstruction = exports.isRevokeInstruction = exports.isApproveInstruction = exports.isTransferInstruction = exports.isInitializeMultisigInstruction = exports.isInitializeAccountInstruction = exports.isInitializeMintInstruction = exports.decodeInstruction = void 0;\n\nconst buffer_layout_1 = require(\"@solana/buffer-layout\");\n\nconst constants_1 = require(\"../constants\");\n\nconst errors_1 = require(\"../errors\");\n\nconst approve_1 = require(\"./approve\");\n\nconst approveChecked_1 = require(\"./approveChecked\");\n\nconst burn_1 = require(\"./burn\");\n\nconst burnChecked_1 = require(\"./burnChecked\");\n\nconst closeAccount_1 = require(\"./closeAccount\");\n\nconst freezeAccount_1 = require(\"./freezeAccount\");\n\nconst initializeAccount_1 = require(\"./initializeAccount\");\n\nconst initializeMint_1 = require(\"./initializeMint\");\n\nconst initializeMultisig_1 = require(\"./initializeMultisig\");\n\nconst mintTo_1 = require(\"./mintTo\");\n\nconst mintToChecked_1 = require(\"./mintToChecked\");\n\nconst revoke_1 = require(\"./revoke\");\n\nconst setAuthority_1 = require(\"./setAuthority\");\n\nconst syncNative_1 = require(\"./syncNative\");\n\nconst thawAccount_1 = require(\"./thawAccount\");\n\nconst transfer_1 = require(\"./transfer\");\n\nconst transferChecked_1 = require(\"./transferChecked\");\n\nconst types_1 = require(\"./types\");\n/** TODO: docs */\n\n\nfunction decodeInstruction(instruction) {\n  let programId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : constants_1.TOKEN_PROGRAM_ID;\n  if (!instruction.data.length) throw new errors_1.TokenInvalidInstructionDataError();\n  const type = (0, buffer_layout_1.u8)().decode(instruction.data);\n  if (type === types_1.TokenInstruction.InitializeMint) return (0, initializeMint_1.decodeInitializeMintInstruction)(instruction, programId);\n  if (type === types_1.TokenInstruction.InitializeAccount) return (0, initializeAccount_1.decodeInitializeAccountInstruction)(instruction, programId);\n  if (type === types_1.TokenInstruction.InitializeMultisig) return (0, initializeMultisig_1.decodeInitializeMultisigInstruction)(instruction, programId);\n  if (type === types_1.TokenInstruction.Transfer) return (0, transfer_1.decodeTransferInstruction)(instruction, programId);\n  if (type === types_1.TokenInstruction.Approve) return (0, approve_1.decodeApproveInstruction)(instruction, programId);\n  if (type === types_1.TokenInstruction.Revoke) return (0, revoke_1.decodeRevokeInstruction)(instruction, programId);\n  if (type === types_1.TokenInstruction.SetAuthority) return (0, setAuthority_1.decodeSetAuthorityInstruction)(instruction, programId);\n  if (type === types_1.TokenInstruction.MintTo) return (0, mintTo_1.decodeMintToInstruction)(instruction, programId);\n  if (type === types_1.TokenInstruction.Burn) return (0, burn_1.decodeBurnInstruction)(instruction, programId);\n  if (type === types_1.TokenInstruction.CloseAccount) return (0, closeAccount_1.decodeCloseAccountInstruction)(instruction, programId);\n  if (type === types_1.TokenInstruction.FreezeAccount) return (0, freezeAccount_1.decodeFreezeAccountInstruction)(instruction, programId);\n  if (type === types_1.TokenInstruction.ThawAccount) return (0, thawAccount_1.decodeThawAccountInstruction)(instruction, programId);\n  if (type === types_1.TokenInstruction.TransferChecked) return (0, transferChecked_1.decodeTransferCheckedInstruction)(instruction, programId);\n  if (type === types_1.TokenInstruction.ApproveChecked) return (0, approveChecked_1.decodeApproveCheckedInstruction)(instruction, programId);\n  if (type === types_1.TokenInstruction.MintToChecked) return (0, mintToChecked_1.decodeMintToCheckedInstruction)(instruction, programId);\n  if (type === types_1.TokenInstruction.BurnChecked) return (0, burnChecked_1.decodeBurnCheckedInstruction)(instruction, programId); // TODO: implement\n\n  if (type === types_1.TokenInstruction.InitializeAccount2) throw new errors_1.TokenInvalidInstructionTypeError();\n  if (type === types_1.TokenInstruction.SyncNative) return (0, syncNative_1.decodeSyncNativeInstruction)(instruction, programId); // TODO: implement\n\n  if (type === types_1.TokenInstruction.InitializeAccount3) throw new errors_1.TokenInvalidInstructionTypeError(); // TODO: implement\n\n  if (type === types_1.TokenInstruction.InitializeMultisig2) throw new errors_1.TokenInvalidInstructionTypeError(); // TODO: implement\n\n  if (type === types_1.TokenInstruction.InitializeMint2) throw new errors_1.TokenInvalidInstructionTypeError();\n  throw new errors_1.TokenInvalidInstructionTypeError();\n}\n\nexports.decodeInstruction = decodeInstruction;\n/** TODO: docs */\n\nfunction isInitializeMintInstruction(decoded) {\n  return decoded.data.instruction === types_1.TokenInstruction.InitializeMint;\n}\n\nexports.isInitializeMintInstruction = isInitializeMintInstruction;\n/** TODO: docs */\n\nfunction isInitializeAccountInstruction(decoded) {\n  return decoded.data.instruction === types_1.TokenInstruction.InitializeAccount;\n}\n\nexports.isInitializeAccountInstruction = isInitializeAccountInstruction;\n/** TODO: docs */\n\nfunction isInitializeMultisigInstruction(decoded) {\n  return decoded.data.instruction === types_1.TokenInstruction.InitializeMultisig;\n}\n\nexports.isInitializeMultisigInstruction = isInitializeMultisigInstruction;\n/** TODO: docs */\n\nfunction isTransferInstruction(decoded) {\n  return decoded.data.instruction === types_1.TokenInstruction.Transfer;\n}\n\nexports.isTransferInstruction = isTransferInstruction;\n/** TODO: docs */\n\nfunction isApproveInstruction(decoded) {\n  return decoded.data.instruction === types_1.TokenInstruction.Approve;\n}\n\nexports.isApproveInstruction = isApproveInstruction;\n/** TODO: docs */\n\nfunction isRevokeInstruction(decoded) {\n  return decoded.data.instruction === types_1.TokenInstruction.Revoke;\n}\n\nexports.isRevokeInstruction = isRevokeInstruction;\n/** TODO: docs */\n\nfunction isSetAuthorityInstruction(decoded) {\n  return decoded.data.instruction === types_1.TokenInstruction.SetAuthority;\n}\n\nexports.isSetAuthorityInstruction = isSetAuthorityInstruction;\n/** TODO: docs */\n\nfunction isMintToInstruction(decoded) {\n  return decoded.data.instruction === types_1.TokenInstruction.MintTo;\n}\n\nexports.isMintToInstruction = isMintToInstruction;\n/** TODO: docs */\n\nfunction isBurnInstruction(decoded) {\n  return decoded.data.instruction === types_1.TokenInstruction.Burn;\n}\n\nexports.isBurnInstruction = isBurnInstruction;\n/** TODO: docs */\n\nfunction isCloseAccountInstruction(decoded) {\n  return decoded.data.instruction === types_1.TokenInstruction.CloseAccount;\n}\n\nexports.isCloseAccountInstruction = isCloseAccountInstruction;\n/** TODO: docs */\n\nfunction isFreezeAccountInstruction(decoded) {\n  return decoded.data.instruction === types_1.TokenInstruction.FreezeAccount;\n}\n\nexports.isFreezeAccountInstruction = isFreezeAccountInstruction;\n/** TODO: docs */\n\nfunction isThawAccountInstruction(decoded) {\n  return decoded.data.instruction === types_1.TokenInstruction.ThawAccount;\n}\n\nexports.isThawAccountInstruction = isThawAccountInstruction;\n/** TODO: docs */\n\nfunction isTransferCheckedInstruction(decoded) {\n  return decoded.data.instruction === types_1.TokenInstruction.TransferChecked;\n}\n\nexports.isTransferCheckedInstruction = isTransferCheckedInstruction;\n/** TODO: docs */\n\nfunction isApproveCheckedInstruction(decoded) {\n  return decoded.data.instruction === types_1.TokenInstruction.ApproveChecked;\n}\n\nexports.isApproveCheckedInstruction = isApproveCheckedInstruction;\n/** TODO: docs */\n\nfunction isMintToCheckedInstruction(decoded) {\n  return decoded.data.instruction === types_1.TokenInstruction.MintToChecked;\n}\n\nexports.isMintToCheckedInstruction = isMintToCheckedInstruction;\n/** TODO: docs */\n\nfunction isBurnCheckedInstruction(decoded) {\n  return decoded.data.instruction === types_1.TokenInstruction.BurnChecked;\n}\n\nexports.isBurnCheckedInstruction = isBurnCheckedInstruction;\n/** TODO: docs, implement */\n// export function isInitializeAccount2Instruction(\n//     decoded: DecodedInstruction\n// ): decoded is DecodedInitializeAccount2Instruction {\n//     return decoded.data.instruction === TokenInstruction.InitializeAccount2;\n// }\n\n/** TODO: docs */\n\nfunction isSyncNativeInstruction(decoded) {\n  return decoded.data.instruction === types_1.TokenInstruction.SyncNative;\n}\n\nexports.isSyncNativeInstruction = isSyncNativeInstruction;\n/** TODO: docs, implement */\n// export function isInitializeAccount3Instruction(\n//     decoded: DecodedInstruction\n// ): decoded is DecodedInitializeAccount3Instruction {\n//     return decoded.data.instruction === TokenInstruction.InitializeAccount3;\n// }\n\n/** TODO: docs, implement */\n// export function isInitializeMultisig2Instruction(\n//     decoded: DecodedInstruction\n// ): decoded is DecodedInitializeMultisig2Instruction {\n//     return decoded.data.instruction === TokenInstruction.InitializeMultisig2;\n// }\n\n/** TODO: docs, implement */\n// export function isInitializeMint2Instruction(\n//     decoded: DecodedInstruction\n// ): decoded is DecodedInitializeMint2Instruction {\n//     return decoded.data.instruction === TokenInstruction.InitializeMint2;\n// }","map":{"version":3,"mappings":"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","names":["decodeInstruction","instruction","programId","constants_1","data","length","errors_1","type","decode","types_1","InitializeMint","InitializeAccount","InitializeMultisig","Transfer","Approve","Revoke","SetAuthority","MintTo","Burn","CloseAccount","FreezeAccount","ThawAccount","TransferChecked","ApproveChecked","MintToChecked","BurnChecked","InitializeAccount2","SyncNative","InitializeAccount3","InitializeMultisig2","InitializeMint2","exports","isInitializeMintInstruction","decoded","isInitializeAccountInstruction","isInitializeMultisigInstruction","isTransferInstruction","isApproveInstruction","isRevokeInstruction","isSetAuthorityInstruction","isMintToInstruction","isBurnInstruction","isCloseAccountInstruction","isFreezeAccountInstruction","isThawAccountInstruction","isTransferCheckedInstruction","isApproveCheckedInstruction","isMintToCheckedInstruction","isBurnCheckedInstruction","isSyncNativeInstruction"],"sources":["/home/rajeev/Internship/Get-NFTs-in-Wallet-Adapter/node_modules/@solana/spl-token/src/instructions/decode.ts"],"sourcesContent":["import { u8 } from '@solana/buffer-layout';\nimport { TransactionInstruction } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from '../constants';\nimport { TokenInvalidInstructionDataError, TokenInvalidInstructionTypeError } from '../errors';\nimport { decodeApproveInstruction, DecodedApproveInstruction } from './approve';\nimport { decodeApproveCheckedInstruction, DecodedApproveCheckedInstruction } from './approveChecked';\nimport { decodeBurnInstruction, DecodedBurnInstruction } from './burn';\nimport { decodeBurnCheckedInstruction, DecodedBurnCheckedInstruction } from './burnChecked';\nimport { decodeCloseAccountInstruction, DecodedCloseAccountInstruction } from './closeAccount';\nimport { DecodedFreezeAccountInstruction, decodeFreezeAccountInstruction } from './freezeAccount';\nimport { DecodedInitializeAccountInstruction, decodeInitializeAccountInstruction } from './initializeAccount';\nimport { DecodedInitializeMintInstruction, decodeInitializeMintInstruction } from './initializeMint';\nimport { DecodedInitializeMultisigInstruction, decodeInitializeMultisigInstruction } from './initializeMultisig';\nimport { DecodedMintToInstruction, decodeMintToInstruction } from './mintTo';\nimport { DecodedMintToCheckedInstruction, decodeMintToCheckedInstruction } from './mintToChecked';\nimport { DecodedRevokeInstruction, decodeRevokeInstruction } from './revoke';\nimport { DecodedSetAuthorityInstruction, decodeSetAuthorityInstruction } from './setAuthority';\nimport { DecodedSyncNativeInstruction, decodeSyncNativeInstruction } from './syncNative';\nimport { DecodedThawAccountInstruction, decodeThawAccountInstruction } from './thawAccount';\nimport { DecodedTransferInstruction, decodeTransferInstruction } from './transfer';\nimport { DecodedTransferCheckedInstruction, decodeTransferCheckedInstruction } from './transferChecked';\nimport { TokenInstruction } from './types';\n\n/** TODO: docs */\nexport type DecodedInstruction =\n    | DecodedInitializeMintInstruction\n    | DecodedInitializeAccountInstruction\n    | DecodedInitializeMultisigInstruction\n    | DecodedTransferInstruction\n    | DecodedApproveInstruction\n    | DecodedRevokeInstruction\n    | DecodedSetAuthorityInstruction\n    | DecodedMintToInstruction\n    | DecodedBurnInstruction\n    | DecodedCloseAccountInstruction\n    | DecodedFreezeAccountInstruction\n    | DecodedThawAccountInstruction\n    | DecodedTransferCheckedInstruction\n    | DecodedApproveCheckedInstruction\n    | DecodedMintToCheckedInstruction\n    | DecodedBurnCheckedInstruction\n    // | DecodedInitializeAccount2Instruction\n    | DecodedSyncNativeInstruction\n    // | DecodedInitializeAccount3Instruction\n    // | DecodedInitializeMultisig2Instruction\n    // | DecodedInitializeMint2Instruction\n    // TODO: implement ^ and remove `never`\n    | never;\n\n/** TODO: docs */\nexport function decodeInstruction(\n    instruction: TransactionInstruction,\n    programId = TOKEN_PROGRAM_ID\n): DecodedInstruction {\n    if (!instruction.data.length) throw new TokenInvalidInstructionDataError();\n\n    const type = u8().decode(instruction.data);\n    if (type === TokenInstruction.InitializeMint) return decodeInitializeMintInstruction(instruction, programId);\n    if (type === TokenInstruction.InitializeAccount) return decodeInitializeAccountInstruction(instruction, programId);\n    if (type === TokenInstruction.InitializeMultisig)\n        return decodeInitializeMultisigInstruction(instruction, programId);\n    if (type === TokenInstruction.Transfer) return decodeTransferInstruction(instruction, programId);\n    if (type === TokenInstruction.Approve) return decodeApproveInstruction(instruction, programId);\n    if (type === TokenInstruction.Revoke) return decodeRevokeInstruction(instruction, programId);\n    if (type === TokenInstruction.SetAuthority) return decodeSetAuthorityInstruction(instruction, programId);\n    if (type === TokenInstruction.MintTo) return decodeMintToInstruction(instruction, programId);\n    if (type === TokenInstruction.Burn) return decodeBurnInstruction(instruction, programId);\n    if (type === TokenInstruction.CloseAccount) return decodeCloseAccountInstruction(instruction, programId);\n    if (type === TokenInstruction.FreezeAccount) return decodeFreezeAccountInstruction(instruction, programId);\n    if (type === TokenInstruction.ThawAccount) return decodeThawAccountInstruction(instruction, programId);\n    if (type === TokenInstruction.TransferChecked) return decodeTransferCheckedInstruction(instruction, programId);\n    if (type === TokenInstruction.ApproveChecked) return decodeApproveCheckedInstruction(instruction, programId);\n    if (type === TokenInstruction.MintToChecked) return decodeMintToCheckedInstruction(instruction, programId);\n    if (type === TokenInstruction.BurnChecked) return decodeBurnCheckedInstruction(instruction, programId);\n    // TODO: implement\n    if (type === TokenInstruction.InitializeAccount2) throw new TokenInvalidInstructionTypeError();\n    if (type === TokenInstruction.SyncNative) return decodeSyncNativeInstruction(instruction, programId);\n    // TODO: implement\n    if (type === TokenInstruction.InitializeAccount3) throw new TokenInvalidInstructionTypeError();\n    // TODO: implement\n    if (type === TokenInstruction.InitializeMultisig2) throw new TokenInvalidInstructionTypeError();\n    // TODO: implement\n    if (type === TokenInstruction.InitializeMint2) throw new TokenInvalidInstructionTypeError();\n\n    throw new TokenInvalidInstructionTypeError();\n}\n\n/** TODO: docs */\nexport function isInitializeMintInstruction(decoded: DecodedInstruction): decoded is DecodedInitializeMintInstruction {\n    return decoded.data.instruction === TokenInstruction.InitializeMint;\n}\n\n/** TODO: docs */\nexport function isInitializeAccountInstruction(\n    decoded: DecodedInstruction\n): decoded is DecodedInitializeAccountInstruction {\n    return decoded.data.instruction === TokenInstruction.InitializeAccount;\n}\n\n/** TODO: docs */\nexport function isInitializeMultisigInstruction(\n    decoded: DecodedInstruction\n): decoded is DecodedInitializeMultisigInstruction {\n    return decoded.data.instruction === TokenInstruction.InitializeMultisig;\n}\n\n/** TODO: docs */\nexport function isTransferInstruction(decoded: DecodedInstruction): decoded is DecodedTransferInstruction {\n    return decoded.data.instruction === TokenInstruction.Transfer;\n}\n\n/** TODO: docs */\nexport function isApproveInstruction(decoded: DecodedInstruction): decoded is DecodedApproveInstruction {\n    return decoded.data.instruction === TokenInstruction.Approve;\n}\n\n/** TODO: docs */\nexport function isRevokeInstruction(decoded: DecodedInstruction): decoded is DecodedRevokeInstruction {\n    return decoded.data.instruction === TokenInstruction.Revoke;\n}\n\n/** TODO: docs */\nexport function isSetAuthorityInstruction(decoded: DecodedInstruction): decoded is DecodedSetAuthorityInstruction {\n    return decoded.data.instruction === TokenInstruction.SetAuthority;\n}\n\n/** TODO: docs */\nexport function isMintToInstruction(decoded: DecodedInstruction): decoded is DecodedMintToInstruction {\n    return decoded.data.instruction === TokenInstruction.MintTo;\n}\n\n/** TODO: docs */\nexport function isBurnInstruction(decoded: DecodedInstruction): decoded is DecodedBurnInstruction {\n    return decoded.data.instruction === TokenInstruction.Burn;\n}\n\n/** TODO: docs */\nexport function isCloseAccountInstruction(decoded: DecodedInstruction): decoded is DecodedCloseAccountInstruction {\n    return decoded.data.instruction === TokenInstruction.CloseAccount;\n}\n\n/** TODO: docs */\nexport function isFreezeAccountInstruction(decoded: DecodedInstruction): decoded is DecodedFreezeAccountInstruction {\n    return decoded.data.instruction === TokenInstruction.FreezeAccount;\n}\n\n/** TODO: docs */\nexport function isThawAccountInstruction(decoded: DecodedInstruction): decoded is DecodedThawAccountInstruction {\n    return decoded.data.instruction === TokenInstruction.ThawAccount;\n}\n\n/** TODO: docs */\nexport function isTransferCheckedInstruction(\n    decoded: DecodedInstruction\n): decoded is DecodedTransferCheckedInstruction {\n    return decoded.data.instruction === TokenInstruction.TransferChecked;\n}\n\n/** TODO: docs */\nexport function isApproveCheckedInstruction(decoded: DecodedInstruction): decoded is DecodedApproveCheckedInstruction {\n    return decoded.data.instruction === TokenInstruction.ApproveChecked;\n}\n\n/** TODO: docs */\nexport function isMintToCheckedInstruction(decoded: DecodedInstruction): decoded is DecodedMintToCheckedInstruction {\n    return decoded.data.instruction === TokenInstruction.MintToChecked;\n}\n\n/** TODO: docs */\nexport function isBurnCheckedInstruction(decoded: DecodedInstruction): decoded is DecodedBurnCheckedInstruction {\n    return decoded.data.instruction === TokenInstruction.BurnChecked;\n}\n\n/** TODO: docs, implement */\n// export function isInitializeAccount2Instruction(\n//     decoded: DecodedInstruction\n// ): decoded is DecodedInitializeAccount2Instruction {\n//     return decoded.data.instruction === TokenInstruction.InitializeAccount2;\n// }\n\n/** TODO: docs */\nexport function isSyncNativeInstruction(decoded: DecodedInstruction): decoded is DecodedSyncNativeInstruction {\n    return decoded.data.instruction === TokenInstruction.SyncNative;\n}\n\n/** TODO: docs, implement */\n// export function isInitializeAccount3Instruction(\n//     decoded: DecodedInstruction\n// ): decoded is DecodedInitializeAccount3Instruction {\n//     return decoded.data.instruction === TokenInstruction.InitializeAccount3;\n// }\n\n/** TODO: docs, implement */\n// export function isInitializeMultisig2Instruction(\n//     decoded: DecodedInstruction\n// ): decoded is DecodedInitializeMultisig2Instruction {\n//     return decoded.data.instruction === TokenInstruction.InitializeMultisig2;\n// }\n\n/** TODO: docs, implement */\n// export function isInitializeMint2Instruction(\n//     decoded: DecodedInstruction\n// ): decoded is DecodedInitializeMint2Instruction {\n//     return decoded.data.instruction === TokenInstruction.InitializeMint2;\n// }\n"]},"metadata":{},"sourceType":"script"}