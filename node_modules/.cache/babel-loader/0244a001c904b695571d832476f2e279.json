{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bool = void 0;\n\nconst buffer_layout_1 = require(\"@solana/buffer-layout\");\n\nconst base_1 = require(\"./base\");\n\nconst bool = property => {\n  const layout = (0, buffer_layout_1.u8)(property);\n  const {\n    encode,\n    decode\n  } = (0, base_1.encodeDecode)(layout);\n  const boolLayout = layout;\n\n  boolLayout.decode = (buffer, offset) => {\n    const src = decode(buffer, offset);\n    return !!src;\n  };\n\n  boolLayout.encode = (bool, buffer, offset) => {\n    const src = Number(bool);\n    return encode(src, buffer, offset);\n  };\n\n  return boolLayout;\n};\n\nexports.bool = bool;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AAEO,MAAMA,IAAI,GAAIC,QAAD,IAAuC;AACvD,QAAMC,MAAM,GAAG,wBAAGD,QAAH,CAAf;AACA,QAAM;AAAEE,UAAF;AAAUC;AAAV,MAAqB,yBAAaF,MAAb,CAA3B;AAEA,QAAMG,UAAU,GAAGH,MAAnB;;AAEAG,YAAU,CAACD,MAAX,GAAoB,CAACE,MAAD,EAAiBC,MAAjB,KAAmC;AACnD,UAAMC,GAAG,GAAGJ,MAAM,CAACE,MAAD,EAASC,MAAT,CAAlB;AACA,WAAO,CAAC,CAACC,GAAT;AACH,GAHD;;AAKAH,YAAU,CAACF,MAAX,GAAoB,CAACH,IAAD,EAAgBM,MAAhB,EAAgCC,MAAhC,KAAkD;AAClE,UAAMC,GAAG,GAAGC,MAAM,CAACT,IAAD,CAAlB;AACA,WAAOG,MAAM,CAACK,GAAD,EAAMF,MAAN,EAAcC,MAAd,CAAb;AACH,GAHD;;AAKA,SAAOF,UAAP;AACH,CAjBM;;AAAMK,eAAIV,IAAJ","names":["bool","property","layout","encode","decode","boolLayout","buffer","offset","src","Number","exports"],"sources":["/home/rajeev/Internship/Get-NFTs-in-Wallet-Adapter/node_modules/@solana/buffer-layout-utils/src/native.ts"],"sourcesContent":["import { Layout, u8 } from '@solana/buffer-layout';\nimport { encodeDecode } from './base';\n\nexport const bool = (property?: string): Layout<boolean> => {\n    const layout = u8(property);\n    const { encode, decode } = encodeDecode(layout);\n\n    const boolLayout = layout as Layout<unknown> as Layout<boolean>;\n\n    boolLayout.decode = (buffer: Buffer, offset: number) => {\n        const src = decode(buffer, offset);\n        return !!src;\n    };\n\n    boolLayout.encode = (bool: boolean, buffer: Buffer, offset: number) => {\n        const src = Number(bool);\n        return encode(src, buffer, offset);\n    };\n\n    return boolLayout;\n};\n"]},"metadata":{},"sourceType":"script"}