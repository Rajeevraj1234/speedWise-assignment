{"ast":null,"code":"import { useMemo } from 'react';\nimport { useWallet } from './useWallet.mjs';\nexport function useAnchorWallet() {\n  const {\n    publicKey,\n    signTransaction,\n    signAllTransactions\n  } = useWallet();\n  return useMemo(() => publicKey && signTransaction && signAllTransactions ? {\n    publicKey,\n    signTransaction,\n    signAllTransactions\n  } : undefined, [publicKey, signTransaction, signAllTransactions]);\n}","map":{"version":3,"mappings":"AACA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAQA,OAAM,SAAUC,eAAV,GAAyB;AAC3B,QAAM;AAAEC,aAAF;AAAaC,mBAAb;AAA8BC;AAA9B,MAAsDJ,SAAS,EAArE;AACA,SAAOD,OAAO,CACV,MACIG,SAAS,IAAIC,eAAb,IAAgCC,mBAAhC,GACM;AAAEF,aAAF;AAAaC,mBAAb;AAA8BC;AAA9B,GADN,GAEMC,SAJA,EAKV,CAACH,SAAD,EAAYC,eAAZ,EAA6BC,mBAA7B,CALU,CAAd;AAOH","names":["useMemo","useWallet","useAnchorWallet","publicKey","signTransaction","signAllTransactions","undefined"],"sources":["/home/rajeev/Internship/Get-NFTs-in-Wallet-Adapter/node_modules/@solana/wallet-adapter-react/src/useAnchorWallet.ts"],"sourcesContent":["import { PublicKey, Transaction } from '@solana/web3.js';\nimport { useMemo } from 'react';\nimport { useWallet } from './useWallet';\n\nexport interface AnchorWallet {\n    publicKey: PublicKey;\n    signTransaction(transaction: Transaction): Promise<Transaction>;\n    signAllTransactions(transactions: Transaction[]): Promise<Transaction[]>;\n}\n\nexport function useAnchorWallet(): AnchorWallet | undefined {\n    const { publicKey, signTransaction, signAllTransactions } = useWallet();\n    return useMemo(\n        () =>\n            publicKey && signTransaction && signAllTransactions\n                ? { publicKey, signTransaction, signAllTransactions }\n                : undefined,\n        [publicKey, signTransaction, signAllTransactions]\n    );\n}\n"]},"metadata":{},"sourceType":"module"}