{"ast":null,"code":"import { useWallet } from '@solana/wallet-adapter-react';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Button } from './Button.mjs';\nimport { useWalletModal } from './useWalletModal.mjs';\nimport { WalletConnectButton } from './WalletConnectButton.mjs';\nimport { WalletIcon } from './WalletIcon.mjs';\nimport { WalletModalButton } from './WalletModalButton.mjs';\nexport const WalletMultiButton = _ref => {\n  let {\n    children,\n    ...props\n  } = _ref;\n  const {\n    publicKey,\n    wallet,\n    disconnect\n  } = useWallet();\n  const {\n    setVisible\n  } = useWalletModal();\n  const [copied, setCopied] = useState(false);\n  const [active, setActive] = useState(false);\n  const ref = useRef(null);\n  const base58 = useMemo(() => publicKey === null || publicKey === void 0 ? void 0 : publicKey.toBase58(), [publicKey]);\n  const content = useMemo(() => {\n    if (children) return children;\n    if (!wallet || !base58) return null;\n    return base58.slice(0, 4) + '..' + base58.slice(-4);\n  }, [children, wallet, base58]);\n  const copyAddress = useCallback(async () => {\n    if (base58) {\n      await navigator.clipboard.writeText(base58);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 400);\n    }\n  }, [base58]);\n  const openDropdown = useCallback(() => {\n    setActive(true);\n  }, []);\n  const closeDropdown = useCallback(() => {\n    setActive(false);\n  }, []);\n  const openModal = useCallback(() => {\n    setVisible(true);\n    closeDropdown();\n  }, [closeDropdown]);\n  useEffect(() => {\n    const listener = event => {\n      const node = ref.current; // Do nothing if clicking dropdown or its descendants\n\n      if (!node || node.contains(event.target)) return;\n      closeDropdown();\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, closeDropdown]);\n  if (!wallet) return React.createElement(WalletModalButton, { ...props\n  }, children);\n  if (!base58) return React.createElement(WalletConnectButton, { ...props\n  }, children);\n  return React.createElement(\"div\", {\n    className: \"wallet-adapter-dropdown\"\n  }, React.createElement(Button, {\n    \"aria-expanded\": active,\n    className: \"wallet-adapter-button-trigger\",\n    style: {\n      pointerEvents: active ? 'none' : 'auto',\n      ...props.style\n    },\n    onClick: openDropdown,\n    startIcon: React.createElement(WalletIcon, {\n      wallet: wallet\n    }),\n    ...props\n  }, content), React.createElement(\"ul\", {\n    \"aria-label\": \"dropdown-list\",\n    className: `wallet-adapter-dropdown-list ${active && 'wallet-adapter-dropdown-list-active'}`,\n    ref: ref,\n    role: \"menu\"\n  }, React.createElement(\"li\", {\n    onClick: copyAddress,\n    className: \"wallet-adapter-dropdown-list-item\",\n    role: \"menuitem\"\n  }, copied ? 'Copied' : 'Copy address'), React.createElement(\"li\", {\n    onClick: openModal,\n    className: \"wallet-adapter-dropdown-list-item\",\n    role: \"menuitem\"\n  }, \"Change wallet\"), React.createElement(\"li\", {\n    onClick: disconnect,\n    className: \"wallet-adapter-dropdown-list-item\",\n    role: \"menuitem\"\n  }, \"Disconnect\")));\n};","map":{"version":3,"mappings":"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","names":["useWallet","React","useCallback","useEffect","useMemo","useRef","useState","Button","useWalletModal","WalletConnectButton","WalletIcon","WalletModalButton","WalletMultiButton","children","props","publicKey","wallet","disconnect","setVisible","copied","setCopied","active","setActive","ref","base58","toBase58","content","slice","copyAddress","navigator","clipboard","writeText","setTimeout","openDropdown","closeDropdown","openModal","listener","event","node","current","contains","target","document","addEventListener","removeEventListener","className","style","pointerEvents","onClick","startIcon","role"],"sources":["/home/rajeev/Internship/Get-NFTs-in-Wallet-Adapter/node_modules/@solana/wallet-adapter-react-ui/src/WalletMultiButton.tsx"],"sourcesContent":["import { useWallet } from '@solana/wallet-adapter-react';\nimport React, { FC, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Button, ButtonProps } from './Button';\nimport { useWalletModal } from './useWalletModal';\nimport { WalletConnectButton } from './WalletConnectButton';\nimport { WalletIcon } from './WalletIcon';\nimport { WalletModalButton } from './WalletModalButton';\n\nexport const WalletMultiButton: FC<ButtonProps> = ({ children, ...props }) => {\n    const { publicKey, wallet, disconnect } = useWallet();\n    const { setVisible } = useWalletModal();\n    const [copied, setCopied] = useState(false);\n    const [active, setActive] = useState(false);\n    const ref = useRef<HTMLUListElement>(null);\n\n    const base58 = useMemo(() => publicKey?.toBase58(), [publicKey]);\n    const content = useMemo(() => {\n        if (children) return children;\n        if (!wallet || !base58) return null;\n        return base58.slice(0, 4) + '..' + base58.slice(-4);\n    }, [children, wallet, base58]);\n\n    const copyAddress = useCallback(async () => {\n        if (base58) {\n            await navigator.clipboard.writeText(base58);\n            setCopied(true);\n            setTimeout(() => setCopied(false), 400);\n        }\n    }, [base58]);\n\n    const openDropdown = useCallback(() => {\n        setActive(true);\n    }, []);\n\n    const closeDropdown = useCallback(() => {\n        setActive(false);\n    }, []);\n\n    const openModal = useCallback(() => {\n        setVisible(true);\n        closeDropdown();\n    }, [closeDropdown]);\n\n    useEffect(() => {\n        const listener = (event: MouseEvent | TouchEvent) => {\n            const node = ref.current;\n\n            // Do nothing if clicking dropdown or its descendants\n            if (!node || node.contains(event.target as Node)) return;\n\n            closeDropdown();\n        };\n\n        document.addEventListener('mousedown', listener);\n        document.addEventListener('touchstart', listener);\n\n        return () => {\n            document.removeEventListener('mousedown', listener);\n            document.removeEventListener('touchstart', listener);\n        };\n    }, [ref, closeDropdown]);\n\n    if (!wallet) return <WalletModalButton {...props}>{children}</WalletModalButton>;\n    if (!base58) return <WalletConnectButton {...props}>{children}</WalletConnectButton>;\n\n    return (\n        <div className=\"wallet-adapter-dropdown\">\n            <Button\n                aria-expanded={active}\n                className=\"wallet-adapter-button-trigger\"\n                style={{ pointerEvents: active ? 'none' : 'auto', ...props.style }}\n                onClick={openDropdown}\n                startIcon={<WalletIcon wallet={wallet} />}\n                {...props}\n            >\n                {content}\n            </Button>\n            <ul\n                aria-label=\"dropdown-list\"\n                className={`wallet-adapter-dropdown-list ${active && 'wallet-adapter-dropdown-list-active'}`}\n                ref={ref}\n                role=\"menu\"\n            >\n                <li onClick={copyAddress} className=\"wallet-adapter-dropdown-list-item\" role=\"menuitem\">\n                    {copied ? 'Copied' : 'Copy address'}\n                </li>\n                <li onClick={openModal} className=\"wallet-adapter-dropdown-list-item\" role=\"menuitem\">\n                    Change wallet\n                </li>\n                <li onClick={disconnect} className=\"wallet-adapter-dropdown-list-item\" role=\"menuitem\">\n                    Disconnect\n                </li>\n            </ul>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}