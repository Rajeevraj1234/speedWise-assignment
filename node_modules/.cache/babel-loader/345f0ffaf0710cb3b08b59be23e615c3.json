{"ast":null,"code":"import { useWallet } from '@solana/wallet-adapter-react';\nimport React, { useCallback, useMemo } from 'react';\nimport { Button } from './Button.mjs';\nimport { WalletIcon } from './WalletIcon.mjs';\nexport const WalletConnectButton = _ref => {\n  let {\n    children,\n    disabled,\n    onClick,\n    ...props\n  } = _ref;\n  const {\n    wallet,\n    connect,\n    connecting,\n    connected\n  } = useWallet();\n  const handleClick = useCallback(event => {\n    if (onClick) onClick(event); // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n    if (!event.defaultPrevented) connect().catch(() => {});\n  }, [onClick, connect]);\n  const content = useMemo(() => {\n    if (children) return children;\n    if (connecting) return 'Connecting ...';\n    if (connected) return 'Connected';\n    if (wallet) return 'Connect';\n    return 'Connect Wallet';\n  }, [children, connecting, connected, wallet]);\n  return React.createElement(Button, {\n    className: \"wallet-adapter-button-trigger\",\n    disabled: disabled || !wallet || connecting || connected,\n    startIcon: wallet ? React.createElement(WalletIcon, {\n      wallet: wallet\n    }) : undefined,\n    onClick: handleClick,\n    ...props\n  }, content);\n};","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,8BAA1B;AACA,OAAOC,KAAP,IAAuCC,WAAvC,EAAoDC,OAApD,QAAmE,OAAnE;AACA,SAASC,MAAT,QAAoC,cAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,MAAMC,mBAAmB,GAAoB,QAA8C;AAAA,MAA7C;AAAEC,YAAF;AAAYC,YAAZ;AAAsBC,WAAtB;AAA+B,OAAGC;AAAlC,GAA6C;AAC9F,QAAM;AAAEC,UAAF;AAAUC,WAAV;AAAmBC,cAAnB;AAA+BC;AAA/B,MAA6Cd,SAAS,EAA5D;AAEA,QAAMe,WAAW,GAAyCb,WAAW,CAChEc,KAAD,IAAU;AACN,QAAIP,OAAJ,EAAaA,OAAO,CAACO,KAAD,CAAP,CADP,CAEN;;AACA,QAAI,CAACA,KAAK,CAACC,gBAAX,EAA6BL,OAAO,GAAGM,KAAV,CAAgB,MAAK,CAAG,CAAxB;AAChC,GALgE,EAMjE,CAACT,OAAD,EAAUG,OAAV,CANiE,CAArE;AASA,QAAMO,OAAO,GAAGhB,OAAO,CAAC,MAAK;AACzB,QAAII,QAAJ,EAAc,OAAOA,QAAP;AACd,QAAIM,UAAJ,EAAgB,OAAO,gBAAP;AAChB,QAAIC,SAAJ,EAAe,OAAO,WAAP;AACf,QAAIH,MAAJ,EAAY,OAAO,SAAP;AACZ,WAAO,gBAAP;AACH,GANsB,EAMpB,CAACJ,QAAD,EAAWM,UAAX,EAAuBC,SAAvB,EAAkCH,MAAlC,CANoB,CAAvB;AAQA,SACIV,oBAACG,MAAD,EAAO;AACHgB,aAAS,EAAC,+BADP;AAEHZ,YAAQ,EAAEA,QAAQ,IAAI,CAACG,MAAb,IAAuBE,UAAvB,IAAqCC,SAF5C;AAGHO,aAAS,EAAEV,MAAM,GAAGV,oBAACI,UAAD,EAAW;AAACM,YAAM,EAAEA;AAAT,KAAX,CAAH,GAAoCW,SAHlD;AAIHb,WAAO,EAAEM,WAJN;AAIiB,OAChBL;AALD,GAAP,EAOKS,OAPL,CADJ;AAWH,CA/BM","names":["useWallet","React","useCallback","useMemo","Button","WalletIcon","WalletConnectButton","children","disabled","onClick","props","wallet","connect","connecting","connected","handleClick","event","defaultPrevented","catch","content","className","startIcon","undefined"],"sources":["/home/rajeev/Internship/Get-NFTs-in-Wallet-Adapter/node_modules/@solana/wallet-adapter-react-ui/src/WalletConnectButton.tsx"],"sourcesContent":["import { useWallet } from '@solana/wallet-adapter-react';\nimport React, { FC, MouseEventHandler, useCallback, useMemo } from 'react';\nimport { Button, ButtonProps } from './Button';\nimport { WalletIcon } from './WalletIcon';\n\nexport const WalletConnectButton: FC<ButtonProps> = ({ children, disabled, onClick, ...props }) => {\n    const { wallet, connect, connecting, connected } = useWallet();\n\n    const handleClick: MouseEventHandler<HTMLButtonElement> = useCallback(\n        (event) => {\n            if (onClick) onClick(event);\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            if (!event.defaultPrevented) connect().catch(() => {});\n        },\n        [onClick, connect]\n    );\n\n    const content = useMemo(() => {\n        if (children) return children;\n        if (connecting) return 'Connecting ...';\n        if (connected) return 'Connected';\n        if (wallet) return 'Connect';\n        return 'Connect Wallet';\n    }, [children, connecting, connected, wallet]);\n\n    return (\n        <Button\n            className=\"wallet-adapter-button-trigger\"\n            disabled={disabled || !wallet || connecting || connected}\n            startIcon={wallet ? <WalletIcon wallet={wallet} /> : undefined}\n            onClick={handleClick}\n            {...props}\n        >\n            {content}\n        </Button>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}