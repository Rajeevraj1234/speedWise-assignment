{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSigners = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n/** @internal */\n\n\nfunction getSigners(signerOrMultisig, multiSigners) {\n  return signerOrMultisig instanceof web3_js_1.PublicKey ? [signerOrMultisig, multiSigners] : [signerOrMultisig.publicKey, [signerOrMultisig]];\n}\n\nexports.getSigners = getSigners;","map":{"version":3,"mappings":";;;;;;;AAAA;AAEA;;;AACA,SAAgBA,UAAhB,CAA2BC,gBAA3B,EAAiEC,YAAjE,EAAuF;AACnF,SAAOD,gBAAgB,YAAYE,mBAA5B,GACD,CAACF,gBAAD,EAAmBC,YAAnB,CADC,GAED,CAACD,gBAAgB,CAACG,SAAlB,EAA6B,CAACH,gBAAD,CAA7B,CAFN;AAGH;;AAJDI","names":["getSigners","signerOrMultisig","multiSigners","web3_js_1","publicKey","exports"],"sources":["/home/rajeev/Internship/Get-NFTs-in-Wallet-Adapter/node_modules/@solana/spl-token/src/actions/internal.ts"],"sourcesContent":["import { PublicKey, Signer } from '@solana/web3.js';\n\n/** @internal */\nexport function getSigners(signerOrMultisig: Signer | PublicKey, multiSigners: Signer[]): [PublicKey, Signer[]] {\n    return signerOrMultisig instanceof PublicKey\n        ? [signerOrMultisig, multiSigners]\n        : [signerOrMultisig.publicKey, [signerOrMultisig]];\n}\n"]},"metadata":{},"sourceType":"script"}